{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600e81526020016d050726163746963652045524332360941b815250604051806040016040528060048152602001635045524360e01b81525081600390816200006791906200020a565b5060046200007682826200020a565b505050620000953369d3c21bcecceda10000006200009b60201b60201c565b620002fe565b6001600160a01b038216620000f65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010a9190620002d6565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019157607f821691505b602082108103620001b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016157600081815260208120601f850160051c81016020861015620001e15750805b601f850160051c820191505b818110156200020257828155600101620001ed565b505050505050565b81516001600160401b0381111562000226576200022662000166565b6200023e816200023784546200017c565b84620001b8565b602080601f8311600181146200027657600084156200025d5750858301515b600019600386901b1c1916600185901b17855562000202565b600085815260208120601f198616915b82811015620002a75788860151825594840194600190910190840162000286565b5085821015620002c65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620002f857634e487b7160e01b600052601160045260246000fd5b92915050565b6108d6806200030e6000396000f3fe60806040526004361061009a5760003560e01c80633950935111610061578063395093511461015957806370a082311461017957806395d89b41146101af578063a457c2d7146101c4578063a9059cbb146101e4578063dd62ed3e1461020457005b806306fdde03146100a3578063095ea7b3146100ce57806318160ddd146100fe57806323b872dd1461011d578063313ce5671461013d57005b366100a157005b005b3480156100af57600080fd5b506100b8610224565b6040516100c59190610720565b60405180910390f35b3480156100da57600080fd5b506100ee6100e936600461078a565b6102b6565b60405190151581526020016100c5565b34801561010a57600080fd5b506002545b6040519081526020016100c5565b34801561012957600080fd5b506100ee6101383660046107b4565b6102d0565b34801561014957600080fd5b50604051601281526020016100c5565b34801561016557600080fd5b506100ee61017436600461078a565b6102f4565b34801561018557600080fd5b5061010f6101943660046107f0565b6001600160a01b031660009081526020819052604090205490565b3480156101bb57600080fd5b506100b8610316565b3480156101d057600080fd5b506100ee6101df36600461078a565b610325565b3480156101f057600080fd5b506100ee6101ff36600461078a565b6103a5565b34801561021057600080fd5b5061010f61021f366004610812565b6103b3565b60606003805461023390610845565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610845565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b6000336102c48185856103de565b60019150505b92915050565b6000336102de858285610502565b6102e985858561057c565b506001949350505050565b6000336102c481858561030783836103b3565b610311919061087f565b6103de565b60606004805461023390610845565b6000338161033382866103b3565b9050838110156103985760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102e982868684036103de565b6000336102c481858561057c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161038f565b6001600160a01b0382166104a15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161038f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061050e84846103b3565b9050600019811461057657818110156105695760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161038f565b61057684848484036103de565b50505050565b6001600160a01b0383166105e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161038f565b6001600160a01b0382166106425760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161038f565b6001600160a01b038316600090815260208190526040902054818110156106ba5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161038f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610576565b600060208083528351808285015260005b8181101561074d57858101830151858201604001528201610731565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461078557600080fd5b919050565b6000806040838503121561079d57600080fd5b6107a68361076e565b946020939093013593505050565b6000806000606084860312156107c957600080fd5b6107d28461076e565b92506107e06020850161076e565b9150604084013590509250925092565b60006020828403121561080257600080fd5b61080b8261076e565b9392505050565b6000806040838503121561082557600080fd5b61082e8361076e565b915061083c6020840161076e565b90509250929050565b600181811c9082168061085957607f821691505b60208210810361087957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ca57634e487b7160e01b600052601160045260246000fdfea264697066735822122067619c520b00a59f079f7160b9a3617f9dd1bff182771a57b5ca84b26e90021064736f6c63430008150033",
    "sourceMap": "109:232:2:-:0;;;154:109;;;;;;;;;;2033:116:48;;;;;;;;;;;;;-1:-1:-1;;;2033:116:48;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:116:48;;;2108:5;2100;:13;;;;;;:::i;:::-;-1:-1:-1;2124:7:48;:17;2134:7;2124;:17;:::i;:::-;;2033:116;;211:44:2::1;217:10;229:25;211:5;;;:44;;:::i;:::-;109:232:::0;;8770:548:48;-1:-1:-1;;;;;8854:21:48;;8846:65;;;;-1:-1:-1;;;8846:65:48;;2937:2:57;8846:65:48;;;2919:21:57;2976:2;2956:18;;;2949:30;3015:33;2995:18;;;2988:61;3066:18;;8846:65:48;;;;;;;;9002:6;8986:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9157:18:48;;:9;:18;;;;;;;;;;;:28;;;;;;9212:37;3468:25:57;;;9212:37:48;;3441:18:57;9212:37:48;;;;;;;8770:548;;:::o;12420:91::-;;;;:::o;14:127:57:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:57;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:57;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:57;;;2580:26;2531:89;-1:-1:-1;;1335:1:57;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:57;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:57;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:57;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:57:o;3095:222::-;3160:9;;;3181:10;;;3178:133;;;3233:10;3228:3;3224:20;3221:1;3214:31;3268:4;3265:1;3258:15;3296:4;3293:1;3286:15;3178:133;3095:222;;;;:::o;3322:177::-;109:232:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061009a5760003560e01c80633950935111610061578063395093511461015957806370a082311461017957806395d89b41146101af578063a457c2d7146101c4578063a9059cbb146101e4578063dd62ed3e1461020457005b806306fdde03146100a3578063095ea7b3146100ce57806318160ddd146100fe57806323b872dd1461011d578063313ce5671461013d57005b366100a157005b005b3480156100af57600080fd5b506100b8610224565b6040516100c59190610720565b60405180910390f35b3480156100da57600080fd5b506100ee6100e936600461078a565b6102b6565b60405190151581526020016100c5565b34801561010a57600080fd5b506002545b6040519081526020016100c5565b34801561012957600080fd5b506100ee6101383660046107b4565b6102d0565b34801561014957600080fd5b50604051601281526020016100c5565b34801561016557600080fd5b506100ee61017436600461078a565b6102f4565b34801561018557600080fd5b5061010f6101943660046107f0565b6001600160a01b031660009081526020819052604090205490565b3480156101bb57600080fd5b506100b8610316565b3480156101d057600080fd5b506100ee6101df36600461078a565b610325565b3480156101f057600080fd5b506100ee6101ff36600461078a565b6103a5565b34801561021057600080fd5b5061010f61021f366004610812565b6103b3565b60606003805461023390610845565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610845565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b6000336102c48185856103de565b60019150505b92915050565b6000336102de858285610502565b6102e985858561057c565b506001949350505050565b6000336102c481858561030783836103b3565b610311919061087f565b6103de565b60606004805461023390610845565b6000338161033382866103b3565b9050838110156103985760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102e982868684036103de565b6000336102c481858561057c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161038f565b6001600160a01b0382166104a15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161038f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061050e84846103b3565b9050600019811461057657818110156105695760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161038f565b61057684848484036103de565b50505050565b6001600160a01b0383166105e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161038f565b6001600160a01b0382166106425760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161038f565b6001600160a01b038316600090815260208190526040902054818110156106ba5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161038f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610576565b600060208083528351808285015260005b8181101561074d57858101830151858201604001528201610731565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461078557600080fd5b919050565b6000806040838503121561079d57600080fd5b6107a68361076e565b946020939093013593505050565b6000806000606084860312156107c957600080fd5b6107d28461076e565b92506107e06020850161076e565b9150604084013590509250925092565b60006020828403121561080257600080fd5b61080b8261076e565b9392505050565b6000806040838503121561082557600080fd5b61082e8361076e565b915061083c6020840161076e565b90509250929050565b600181811c9082168061085957607f821691505b60208210810361087957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ca57634e487b7160e01b600052601160045260246000fdfea264697066735822122067619c520b00a59f079f7160b9a3617f9dd1bff182771a57b5ca84b26e90021064736f6c63430008150033",
    "sourceMap": "109:232:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:100:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4579:201;;;;;;;;;;-1:-1:-1;4579:201:48;;;;;:::i;:::-;;:::i;:::-;;;1169:14:57;;1162:22;1144:41;;1132:2;1117:18;4579:201:48;1004:187:57;3348:108:48;;;;;;;;;;-1:-1:-1;3436:12:48;;3348:108;;;1342:25:57;;;1330:2;1315:18;3348:108:48;1196:177:57;5360:261:48;;;;;;;;;;-1:-1:-1;5360:261:48;;;;;:::i;:::-;;:::i;3190:93::-;;;;;;;;;;-1:-1:-1;3190:93:48;;3273:2;1853:36:57;;1841:2;1826:18;3190:93:48;1711:184:57;6030:238:48;;;;;;;;;;-1:-1:-1;6030:238:48;;;;;:::i;:::-;;:::i;3519:127::-;;;;;;;;;;-1:-1:-1;3519:127:48;;;;;:::i;:::-;-1:-1:-1;;;;;3620:18:48;3593:7;3620:18;;;;;;;;;;;;3519:127;2438:104;;;;;;;;;;;;;:::i;6771:436::-;;;;;;;;;;-1:-1:-1;6771:436:48;;;;;:::i;:::-;;:::i;3852:193::-;;;;;;;;;;-1:-1:-1;3852:193:48;;;;;:::i;:::-;;:::i;4108:151::-;;;;;;;;;;-1:-1:-1;4108:151:48;;;;;:::i;:::-;;:::i;2219:100::-;2273:13;2306:5;2299:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:100;:::o;4579:201::-;4662:4;736:10:52;4718:32:48;736:10:52;4734:7:48;4743:6;4718:8;:32::i;:::-;4768:4;4761:11;;;4579:201;;;;;:::o;5360:261::-;5457:4;736:10:52;5515:38:48;5531:4;736:10:52;5546:6:48;5515:15;:38::i;:::-;5564:27;5574:4;5580:2;5584:6;5564:9;:27::i;:::-;-1:-1:-1;5609:4:48;;5360:261;-1:-1:-1;;;;5360:261:48:o;6030:238::-;6118:4;736:10:52;6174:64:48;736:10:52;6190:7:48;6227:10;6199:25;736:10:52;6190:7:48;6199:9;:25::i;:::-;:38;;;;:::i;:::-;6174:8;:64::i;2438:104::-;2494:13;2527:7;2520:14;;;;;:::i;6771:436::-;6864:4;736:10:52;6864:4:48;6947:25;736:10:52;6964:7:48;6947:9;:25::i;:::-;6920:52;;7011:15;6991:16;:35;;6983:85;;;;-1:-1:-1;;;6983:85:48;;3170:2:57;6983:85:48;;;3152:21:57;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:57;;;3292:35;3344:19;;6983:85:48;;;;;;;;;7104:60;7113:5;7120:7;7148:15;7129:16;:34;7104:8;:60::i;3852:193::-;3931:4;736:10:52;3987:28:48;736:10:52;4004:2:48;4008:6;3987:9;:28::i;4108:151::-;-1:-1:-1;;;;;4224:18:48;;;4197:7;4224:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4108:151::o;10764:346::-;-1:-1:-1;;;;;10866:19:48;;10858:68;;;;-1:-1:-1;;;10858:68:48;;3576:2:57;10858:68:48;;;3558:21:57;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:57;;;3698:34;3749:19;;10858:68:48;3374:400:57;10858:68:48;-1:-1:-1;;;;;10945:21:48;;10937:68;;;;-1:-1:-1;;;10937:68:48;;3981:2:57;10937:68:48;;;3963:21:57;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:57;;;4103:32;4152:19;;10937:68:48;3779:398:57;10937:68:48;-1:-1:-1;;;;;11018:18:48;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11070:32;;1342:25:57;;;11070:32:48;;1315:18:57;11070:32:48;;;;;;;10764:346;;;:::o;11401:419::-;11502:24;11529:25;11539:5;11546:7;11529:9;:25::i;:::-;11502:52;;-1:-1:-1;;11569:16:48;:37;11565:248;;11651:6;11631:16;:26;;11623:68;;;;-1:-1:-1;;;11623:68:48;;4384:2:57;11623:68:48;;;4366:21:57;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11623:68:48;4182:353:57;11623:68:48;11735:51;11744:5;11751:7;11779:6;11760:16;:25;11735:8;:51::i;:::-;11491:329;11401:419;;;:::o;7677:806::-;-1:-1:-1;;;;;7774:18:48;;7766:68;;;;-1:-1:-1;;;7766:68:48;;4742:2:57;7766:68:48;;;4724:21:57;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:57;;;4864:35;4916:19;;7766:68:48;4540:401:57;7766:68:48;-1:-1:-1;;;;;7853:16:48;;7845:64;;;;-1:-1:-1;;;7845:64:48;;5148:2:57;7845:64:48;;;5130:21:57;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:57;;;5270:33;5320:19;;7845:64:48;4946:399:57;7845:64:48;-1:-1:-1;;;;;7995:15:48;;7973:19;7995:15;;;;;;;;;;;8029:21;;;;8021:72;;;;-1:-1:-1;;;8021:72:48;;5552:2:57;8021:72:48;;;5534:21:57;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:57;;;5674:36;5727:19;;8021:72:48;5350:402:57;8021:72:48;-1:-1:-1;;;;;8129:15:48;;;:9;:15;;;;;;;;;;;8147:20;;;8129:38;;8347:13;;;;;;;;;;:23;;;;;;8399:26;;1342:25:57;;;8347:13:48;;8399:26;;1315:18:57;8399:26:48;;;;;;;8438:37;12420:91;14:548:57;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:57;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:57:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:57:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PracticeToken.sol\":\"PracticeSupplyERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/PracticeToken.sol\":{\"keccak256\":\"0x26e24e5d7c521072c0b1c115a194b54d0eb306af6da8f47245f66ad9b28ee299\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0dae662f0baeb975a19ec6796959e335eede7e1dadbb64ef5ef0a127c22f9a2\",\"dweb:/ipfs/QmbhTNT1f5QbBXXhjXf8jWjAnfkfXiT79tifH51yzdisZM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa3ce7a0af2f67fd8de6bdf4fb32434fd84396596c5fb55a8b9213cd08b71b2d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa06b0c234b5597955f9a5b867a9bd9c498d4d1c89925a0c1dea2facd5a4ae1b\",\"dweb:/ipfs/QmP3y9CMRRY1ipQRcF1HSRos56jtLA1rnVakks5MTi9WLe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/PracticeToken.sol": "PracticeSupplyERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/PracticeToken.sol": {
        "keccak256": "0x26e24e5d7c521072c0b1c115a194b54d0eb306af6da8f47245f66ad9b28ee299",
        "urls": [
          "bzz-raw://b0dae662f0baeb975a19ec6796959e335eede7e1dadbb64ef5ef0a127c22f9a2",
          "dweb:/ipfs/QmbhTNT1f5QbBXXhjXf8jWjAnfkfXiT79tifH51yzdisZM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa3ce7a0af2f67fd8de6bdf4fb32434fd84396596c5fb55a8b9213cd08b71b2d7",
        "urls": [
          "bzz-raw://fa06b0c234b5597955f9a5b867a9bd9c498d4d1c89925a0c1dea2facd5a4ae1b",
          "dweb:/ipfs/QmP3y9CMRRY1ipQRcF1HSRos56jtLA1rnVakks5MTi9WLe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9",
        "urls": [
          "bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d",
          "dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/PracticeToken.sol",
    "id": 325,
    "exportedSymbols": {
      "Context": [
        49096
      ],
      "ERC20": [
        48641
      ],
      "IERC20": [
        48719
      ],
      "IERC20Metadata": [
        48744
      ],
      "PracticeSupplyERC20": [
        324
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:310:2",
    "nodes": [
      {
        "id": 298,
        "nodeType": "PragmaDirective",
        "src": "33:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 299,
        "nodeType": "ImportDirective",
        "src": "61:44:2",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 325,
        "sourceUnit": 48642,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 324,
        "nodeType": "ContractDefinition",
        "src": "109:232:2",
        "nodes": [
          {
            "id": 315,
            "nodeType": "FunctionDefinition",
            "src": "154:109:2",
            "nodes": [],
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "200:63:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 309,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "217:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "221:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "217:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030303030303030",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "229:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 308,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48458,
                      "src": "211:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "211:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "211:44:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5072616374696365204552433230",
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "174:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1bb1954b5ba5e14418552e03530e385e870b679f1eb7a29761cf39cd6d5f522d",
                      "typeString": "literal_string \"Practice ERC20\""
                    },
                    "value": "Practice ERC20"
                  },
                  {
                    "hexValue": "50455243",
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "192:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cc49ae3a9a3b775aef4745ee386efb528758e1a5fd2d11e2ec8ad0e5ce36c09f",
                      "typeString": "literal_string \"PERC\""
                    },
                    "value": "PERC"
                  }
                ],
                "id": 306,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 303,
                  "name": "ERC20",
                  "nameLocations": [
                    "168:5:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48641,
                  "src": "168:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "168:31:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "165:2:2"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:0:2"
            },
            "scope": 324,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 319,
            "nodeType": "FunctionDefinition",
            "src": "271:30:2",
            "nodes": [],
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "299:2:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:2"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:0:2"
            },
            "scope": 324,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 323,
            "nodeType": "FunctionDefinition",
            "src": "309:29:2",
            "nodes": [],
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "336:2:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:2:2"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:2"
            },
            "scope": 324,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 300,
              "name": "ERC20",
              "nameLocations": [
                "141:5:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48641,
              "src": "141:5:2"
            },
            "id": 301,
            "nodeType": "InheritanceSpecifier",
            "src": "141:5:2"
          }
        ],
        "canonicalName": "PracticeSupplyERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          324,
          48641,
          48744,
          48719,
          49096
        ],
        "name": "PracticeSupplyERC20",
        "nameLocation": "118:19:2",
        "scope": 325,
        "usedErrors": [],
        "usedEvents": [
          48653,
          48662
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 2
}