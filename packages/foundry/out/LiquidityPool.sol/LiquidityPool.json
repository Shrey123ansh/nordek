{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "timeStamp",
          "type": "uint32"
        }
      ],
      "name": "AccessedFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "timeStamp",
          "type": "uint32"
        }
      ],
      "name": "AmountMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "timeStamp",
          "type": "uint32"
        }
      ],
      "name": "ContractVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "timeStamp",
          "type": "uint32"
        }
      ],
      "name": "OwnerAccessFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_action",
          "type": "string"
        }
      ],
      "name": "accessFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "extractFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "migration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "verifiedContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "verifyContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506001606555611122806100256000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b11610063578063aaafa23f1161004b578063aaafa23f14610189578063c4d66de8146101a9578063f2fde38b146101bc57005b80638da5cb5b14610134578063a32d24401461016957005b80633d200b451461009a578063715018a6146100ba5780638632dbbe146100cf5780638c6f33491461011457005b3661009857005b005b3480156100a657600080fd5b506100986100b5366004610ee6565b6101dc565b3480156100c657600080fd5b506100986102f6565b3480156100db57600080fd5b506100ff6100ea366004610ee6565b60666020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561012057600080fd5b5061009861012f366004610f08565b61030a565b34801561014057600080fd5b5060335460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010b565b34801561017557600080fd5b50610098610184366004610f63565b6105c4565b34801561019557600080fd5b506100986101a436600461103c565b6107c1565b6100986101b7366004610ee6565b6109c9565b3480156101c857600080fd5b506100986101d7366004610ee6565b610b64565b6101e4610c18565b73ffffffffffffffffffffffffffffffffffffffff8116610266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f696e76616c696420636f6e74726163742061646472657373000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526066602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905581519283524263ffffffff16908301527f2f0ca928d7e629f2329ba461aa34594df001a516ffa5353d2dd549874d89e7db910160405180910390a150565b6102fe610c18565b6103086000610c99565b565b610312610d10565b61031a610c18565b81471015610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f436f6e747261637420696e73756666696369656e742062616c616e6365000000604482015260640161025d565b600082116103ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f696e76616c696420616d6f756e74000000000000000000000000000000000000604482015260640161025d565b73ffffffffffffffffffffffffffffffffffffffff811661046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f696e76616c696420616464726573730000000000000000000000000000000000604482015260640161025d565b6040805183815273ffffffffffffffffffffffffffffffffffffffff831660208201524263ffffffff168183015290517fb5a07b1f4bc2f4ff306ef2ad16fb57d1a54b12930178ff22caa5169642b8ef419181900360600190a160008173ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d806000811461051f576040519150601f19603f3d011682016040523d82523d6000602084013e610524565b606091505b50509050806105b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f556e61626c6520746f2073656e642076616c7565206f7220726563697069656e60448201527f74206d6179206861766520726576657274656400000000000000000000000000606482015260840161025d565b506105c06001606555565b5050565b3360009081526066602052604090205460ff1661063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f636f6e7472616374206973206e6f742076657269666965640000000000000000604482015260640161025d565b610645610d10565b33478311156106b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f204e524b20746f6b656e7320696e20706f6f6c0000000000000000000000604482015260640161025d565b60008173ffffffffffffffffffffffffffffffffffffffff168460405160006040518083038185875af1925050503d806000811461070a576040519150601f19603f3d011682016040523d82523d6000602084013e61070f565b606091505b505090508061077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f6661696c656420746f2073656e64204e524b20746f6b656e7300000000000000604482015260640161025d565b7f9f705416861499a09cd46d28e87ee1041fec713ff0db1698d34ed3bf62574a0e8284426040516107ad93929190611055565b60405180910390a150506105c06001606555565b6107c9610c18565b6107d1610d10565b8047101561083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f436f6e747261637420696e73756666696369656e742062616c616e6365000000604482015260640161025d565b600081116108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f696e76616c696420616d6f756e74000000000000000000000000000000000000604482015260640161025d565b604051600090339083908381818185875af1925050503d80600081146108e7576040519150601f19603f3d011682016040523d82523d6000602084013e6108ec565b606091505b505090508061097d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f556e61626c6520746f2073656e642076616c7565206f7220726563697069656e60448201527f74206d6179206861766520726576657274656400000000000000000000000000606482015260840161025d565b6040805183815263ffffffff421660208201527fc6ee7d3bab11983542e4dc677b2299dabf95765959bcaccbcccf54dc7dbf6628910160405180910390a1506109c66001606555565b50565b600054610100900460ff16158080156109e95750600054600160ff909116105b80610a035750303b158015610a03575060005460ff166001145b610a8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161025d565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610aed57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610af5610d83565b610afe82610b64565b80156105c057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b610b6c610c18565b73ffffffffffffffffffffffffffffffffffffffff8116610c0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161025d565b6109c681610c99565b60335473ffffffffffffffffffffffffffffffffffffffff163314610308576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025d565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260655403610d7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161025d565b6002606555565b600054610100900460ff16610e1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161025d565b610308600054610100900460ff16610eb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161025d565b61030833610c99565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ee157600080fd5b919050565b600060208284031215610ef857600080fd5b610f0182610ebd565b9392505050565b60008060408385031215610f1b57600080fd5b82359150610f2b60208401610ebd565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215610f7657600080fd5b82359150602083013567ffffffffffffffff80821115610f9557600080fd5b818501915085601f830112610fa957600080fd5b813581811115610fbb57610fbb610f34565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561100157611001610f34565b8160405282815288602084870101111561101a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561104e57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8416815260006020606081840152845180606085015260005b8181101561109f57868101830151858201608001528201611083565b5060006080828601015260807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505063ffffffff8316604083015294935050505056fea2646970667358221220c27f195234293e49b6ef0480b15405c91e84f440ac4719c730d75b3554ad6d8664736f6c63430008150033",
    "sourceMap": "405:3995:1:-:0;;;;;;;;;;;;-1:-1:-1;1749:1:62;1860:7;:22;405:3995:1;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "405:3995:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1597:254;;;;;;;;;;-1:-1:-1;1597:254:1;;;;;:::i;:::-;;:::i;2129:103:51:-;;;;;;;;;;;;;:::i;926:48:1:-;;;;;;;;;;-1:-1:-1;926:48:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;571:14:73;;564:22;546:41;;534:2;519:18;926:48:1;;;;;;;;3085:573;;;;;;;;;;-1:-1:-1;3085:573:1;;;;;:::i;:::-;;:::i;1488:87:51:-;;;;;;;;;;-1:-1:-1;1561:6:51;;1488:87;;1561:6;;;;1003:74:73;;991:2;976:18;1488:87:51;857:226:73;2192:441:1;;;;;;;;;;-1:-1:-1;2192:441:1;;;;;:::i;:::-;;:::i;3934:463::-;;;;;;;;;;-1:-1:-1;3934:463:1;;;;;:::i;:::-;;:::i;1248:136::-;;;;;;:::i;:::-;;:::i;2387:201:51:-;;;;;;;;;;-1:-1:-1;2387:201:51;;;;;:::i;:::-;;:::i;1597:254:1:-;1374:13:51;:11;:13::i;:::-;1678:23:1::1;::::0;::::1;1670:60;;;::::0;::::1;::::0;;2718:2:73;1670:60:1::1;::::0;::::1;2700:21:73::0;2757:2;2737:18;;;2730:30;2796:26;2776:18;;;2769:54;2840:18;;1670:60:1::1;;;;;;;;;1741:27;::::0;::::1;;::::0;;;:16:::1;:27;::::0;;;;;;;;:34;;;::::1;1771:4;1741:34;::::0;;1791:52;;3041:74:73;;;1826:15:1::1;3163:10:73::0;3151:23;3131:18;;;3124:51;1791:52:1::1;::::0;3014:18:73;1791:52:1::1;;;;;;;1597:254:::0;:::o;2129:103:51:-;1374:13;:11;:13::i;:::-;2194:30:::1;2221:1;2194:18;:30::i;:::-;2129:103::o:0;3085:573:1:-;2311:21:62;:19;:21::i;:::-;1374:13:51::1;:11;:13::i;:::-;3255:6:1::2;3230:21;:31;;3208:110;;;::::0;::::2;::::0;;3388:2:73;3208:110:1::2;::::0;::::2;3370:21:73::0;3427:2;3407:18;;;3400:30;3466:31;3446:18;;;3439:59;3515:18;;3208:110:1::2;3186:353:73::0;3208:110:1::2;3346:1;3337:6;:10;3329:37;;;::::0;::::2;::::0;;3746:2:73;3329:37:1::2;::::0;::::2;3728:21:73::0;3785:2;3765:18;;;3758:30;3824:16;3804:18;;;3797:44;3858:18;;3329:37:1::2;3544:338:73::0;3329:37:1::2;3385:24;::::0;::::2;3377:52;;;::::0;::::2;::::0;;4089:2:73;3377:52:1::2;::::0;::::2;4071:21:73::0;4128:2;4108:18;;;4101:30;4167:17;4147:18;;;4140:45;4202:18;;3377:52:1::2;3887:339:73::0;3377:52:1::2;3445:59;::::0;;4431:25:73;;;4504:42;4492:55;;4487:2;4472:18;;4465:83;3487:15:1::2;4596:10:73::0;4584:23;4564:18;;;4557:51;3445:59:1;;::::2;::::0;;;;4419:2:73;3445:59:1;;::::2;3516:12;3534:10;:15;;3557:6;3534:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3515:53;;;3587:7;3579:71;;;::::0;::::2;::::0;;5031:2:73;3579:71:1::2;::::0;::::2;5013:21:73::0;5070:2;5050:18;;;5043:30;5109:34;5089:18;;;5082:62;5180:21;5160:18;;;5153:49;5219:19;;3579:71:1::2;4829:415:73::0;3579:71:1::2;3197:461;2355:20:62::0;1749:1;2875:7;:22;2692:213;2355:20;3085:573:1;;:::o;2192:441::-;1041:10;1024:28;;;;:16;:28;;;;;;;;1016:65;;;;;;;5451:2:73;1016:65:1;;;5433:21:73;5490:2;5470:18;;;5463:30;5529:26;5509:18;;;5502:54;5573:18;;1016:65:1;5249:348:73;1016:65:1;2311:21:62::1;:19;:21::i;:::-;2342:10:1::2;2371:21;:32:::0;-1:-1:-1;2371:32:1::2;2363:66;;;::::0;::::2;::::0;;5804:2:73;2363:66:1::2;::::0;::::2;5786:21:73::0;5843:2;5823:18;;;5816:30;5882:23;5862:18;;;5855:51;5923:18;;2363:66:1::2;5602:345:73::0;2363:66:1::2;2443:12;2461:9;:14;;2483:7;2461:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2442:53;;;2514:7;2506:45;;;::::0;::::2;::::0;;6154:2:73;2506:45:1::2;::::0;::::2;6136:21:73::0;6193:2;6173:18;;;6166:30;6232:27;6212:18;;;6205:55;6277:18;;2506:45:1::2;5952:349:73::0;2506:45:1::2;2567:58;2581:9;2592:7;2608:15;2567:58;;;;;;;;:::i;:::-;;;;;;;;2311:322;;2355:20:62::1;1749:1:::0;2875:7;:22;2692:213;3934:463:1;1374:13:51;:11;:13::i;:::-;2311:21:62::1;:19;:21::i;:::-;4063:7:1::2;4038:21;:32;;4016:111;;;::::0;::::2;::::0;;3388:2:73;4016:111:1::2;::::0;::::2;3370:21:73::0;3427:2;3407:18;;;3400:30;3466:31;3446:18;;;3439:59;3515:18;;4016:111:1::2;3186:353:73::0;4016:111:1::2;4156:1;4146:7;:11;4138:38;;;::::0;::::2;::::0;;3746:2:73;4138:38:1::2;::::0;::::2;3728:21:73::0;3785:2;3765:18;;;3758:30;3824:16;3804:18;;;3797:44;3858:18;;4138:38:1::2;3544:338:73::0;4138:38:1::2;4206:35;::::0;4188:12:::2;::::0;4206:10:::2;::::0;4229:7;;4188:12;4206:35;4188:12;4206:35;4229:7;4206:10;:35:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:54;;;4260:7;4252:71;;;::::0;::::2;::::0;;5031:2:73;4252:71:1::2;::::0;::::2;5013:21:73::0;5070:2;5050:18;;;5043:30;5109:34;5089:18;;;5082:62;5180:21;5160:18;;;5153:49;5219:19;;4252:71:1::2;4829:415:73::0;4252:71:1::2;4339:50;::::0;;7299:25:73;;;7372:10;4372:15:1::2;7360:23:73::0;7355:2;7340:18;;7333:51;4339:50:1::2;::::0;7272:18:73;4339:50:1::2;;;;;;;4005:392;2355:20:62::1;1749:1:::0;2875:7;:22;2692:213;2355:20:::1;3934:463:1::0;:::o;1248:136::-;3363:19:52;3386:13;;;;;;3385:14;;3433:34;;;;-1:-1:-1;3451:12:52;;3466:1;3451:12;;;;:16;3433:34;3432:108;;;-1:-1:-1;3512:4:52;1757:19:53;:23;;;3473:66:52;;-1:-1:-1;3522:12:52;;;;;:17;3473:66;3410:204;;;;;;;7597:2:73;3410:204:52;;;7579:21:73;7636:2;7616:18;;;7609:30;7675:34;7655:18;;;7648:62;7746:16;7726:18;;;7719:44;7780:19;;3410:204:52;7395:410:73;3410:204:52;3625:12;:16;;;;3640:1;3625:16;;;3652:67;;;;3687:13;:20;;;;;;;;3652:67;1324:16:1::1;:14;:16::i;:::-;1351:25;1369:6;1351:17;:25::i;:::-;3745:14:52::0;3741:102;;;3792:5;3776:21;;;;;;3817:14;;-1:-1:-1;7962:36:73;;3817:14:52;;7950:2:73;7935:18;3817:14:52;;;;;;;3352:498;1248:136:1;:::o;2387:201:51:-;1374:13;:11;:13::i;:::-;2476:22:::1;::::0;::::1;2468:73;;;::::0;::::1;::::0;;8211:2:73;2468:73:51::1;::::0;::::1;8193:21:73::0;8250:2;8230:18;;;8223:30;8289:34;8269:18;;;8262:62;8360:8;8340:18;;;8333:36;8386:19;;2468:73:51::1;8009:402:73::0;2468:73:51::1;2552:28;2571:8;2552:18;:28::i;1653:132::-:0;1561:6;;1717:23;1561:6;952:10:54;1717:23:51;1709:68;;;;;;;8618:2:73;1709:68:51;;;8600:21:73;;;8637:18;;;8630:30;8696:34;8676:18;;;8669:62;8748:18;;1709:68:51;8416:356:73;2748:191:51;2841:6;;;;2858:17;;;;;;;;;;;2891:40;;2841:6;;;2858:17;2841:6;;2891:40;;2822:16;;2891:40;2811:128;2748:191;:::o;2391:293:62:-;1793:1;2525:7;;:19;2517:63;;;;;;;8979:2:73;2517:63:62;;;8961:21:73;9018:2;8998:18;;;8991:30;9057:33;9037:18;;;9030:61;9108:18;;2517:63:62;8777:355:73;2517:63:62;1793:1;2658:7;:18;2391:293::o;1031:97:51:-;5506:13:52;;;;;;;5498:69;;;;;;;9339:2:73;5498:69:52;;;9321:21:73;9378:2;9358:18;;;9351:30;9417:34;9397:18;;;9390:62;9488:13;9468:18;;;9461:41;9519:19;;5498:69:52;9137:407:73;5498:69:52;1094:26:51::1;5506:13:52::0;;;;;;;5498:69;;;;;;;9339:2:73;5498:69:52;;;9321:21:73;9378:2;9358:18;;;9351:30;9417:34;9397:18;;;9390:62;9488:13;9468:18;;;9461:41;9519:19;;5498:69:52;9137:407:73;5498:69:52;1209:32:51::1;952:10:54::0;1209:18:51::1;:32::i;14:196:73:-:0;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:73:o;598:254::-;666:6;674;727:2;715:9;706:7;702:23;698:32;695:52;;;743:1;740;733:12;695:52;779:9;766:23;756:33;;808:38;842:2;831:9;827:18;808:38;:::i;:::-;798:48;;598:254;;;;;:::o;1088:184::-;1140:77;1137:1;1130:88;1237:4;1234:1;1227:15;1261:4;1258:1;1251:15;1277:1049;1355:6;1363;1416:2;1404:9;1395:7;1391:23;1387:32;1384:52;;;1432:1;1429;1422:12;1384:52;1468:9;1455:23;1445:33;;1529:2;1518:9;1514:18;1501:32;1552:18;1593:2;1585:6;1582:14;1579:34;;;1609:1;1606;1599:12;1579:34;1647:6;1636:9;1632:22;1622:32;;1692:7;1685:4;1681:2;1677:13;1673:27;1663:55;;1714:1;1711;1704:12;1663:55;1750:2;1737:16;1772:2;1768;1765:10;1762:36;;;1778:18;;:::i;:::-;1912:2;1906:9;1974:4;1966:13;;1817:66;1962:22;;;1986:2;1958:31;1954:40;1942:53;;;2010:18;;;2030:22;;;2007:46;2004:72;;;2056:18;;:::i;:::-;2096:10;2092:2;2085:22;2131:2;2123:6;2116:18;2171:7;2166:2;2161;2157;2153:11;2149:20;2146:33;2143:53;;;2192:1;2189;2182:12;2143:53;2248:2;2243;2239;2235:11;2230:2;2222:6;2218:15;2205:46;2293:1;2288:2;2283;2275:6;2271:15;2267:24;2260:35;2314:6;2304:16;;;;;;;1277:1049;;;;;:::o;2331:180::-;2390:6;2443:2;2431:9;2422:7;2418:23;2414:32;2411:52;;;2459:1;2456;2449:12;2411:52;-1:-1:-1;2482:23:73;;2331:180;-1:-1:-1;2331:180:73:o;6306:816::-;6521:42;6513:6;6509:55;6498:9;6491:74;6472:4;6584:2;6622;6617;6606:9;6602:18;6595:30;6654:6;6648:13;6697:6;6692:2;6681:9;6677:18;6670:34;6722:1;6732:141;6746:6;6743:1;6740:13;6732:141;;;6842:14;;;6838:23;;6832:30;6807:17;;;6826:3;6803:27;6796:67;6761:10;;6732:141;;;6736:3;6923:1;6917:3;6908:6;6897:9;6893:22;6889:32;6882:43;7052:3;6982:66;6977:2;6969:6;6965:15;6961:88;6950:9;6946:104;6942:114;6934:122;;;;7104:10;7096:6;7092:23;7087:2;7076:9;7072:18;7065:51;6306:816;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "accessFunds(uint256,string)": "a32d2440",
    "extractFunds(uint256)": "aaafa23f",
    "initialize(address)": "c4d66de8",
    "migration(uint256,address)": "8c6f3349",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "verifiedContract(address)": "8632dbbe",
    "verifyContract(address)": "3d200b45"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timeStamp\",\"type\":\"uint32\"}],\"name\":\"AccessedFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timeStamp\",\"type\":\"uint32\"}],\"name\":\"AmountMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timeStamp\",\"type\":\"uint32\"}],\"name\":\"ContractVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timeStamp\",\"type\":\"uint32\"}],\"name\":\"OwnerAccessFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_action\",\"type\":\"string\"}],\"name\":\"accessFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"extractFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"migration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"verifiedContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"verifyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"https://anmol-dhiman.netlify.app/\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"accessFunds(uint256,string)\":{\"details\":\"verified contract can access NRK tokens with this function only\",\"params\":{\"_action\":\"the purpose of NRK token\",\"_amount\":\"the amount of NRK tokens required by contract\"}},\"extractFunds(uint256)\":{\"details\":\"extract NRK tokens from this contract\",\"params\":{\"_amount\":\"Specific amount of NRK token needed to be removed from this contract\"}},\"initialize(address)\":{\"details\":\"Proxy initializer function sets new owner other than admin\",\"params\":{\"_owner\":\"The owner of this contract\"}},\"migration(uint256,address)\":{\"details\":\"this function is used to migrate the NRK tokens from this contract to another EOA or contract\",\"params\":{\"amount\":\"the amount of NRK tokens needed to migrate\",\"newAddress\":\"the address on which NRK tokens should be sent\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyContract(address)\":{\"details\":\"verficy the contract for access rewards\",\"params\":{\"_contract\":\"is the contract address which can access NRK tokens\"}}},\"title\":\"Liqudity provider contract for rewards staking contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accessFunds(uint256,string)\":{\"notice\":\"only verified contracts by owner can access this functionthis function is non reentrant\"},\"extractFunds(uint256)\":{\"notice\":\"the contract owner can access this functionthis function is non reentrant\"},\"migration(uint256,address)\":{\"notice\":\"this functions can only be called by ownerthis function is non reentrant\"},\"verifiedContract(address)\":{\"notice\":\"mapping for verified contract which can be accessed by owner only\"},\"verifyContract(address)\":{\"notice\":\"this function can only accessed by owner\"}},\"notice\":\"Provide NRK tokens only to verified address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/ILiquidityPool.sol\":{\"keccak256\":\"0x53d8b4afe234f6dae154f6da1a0a950af9023bdebab67b395b67f990ba689fe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce761749771b4de27c31082cc61c456d1a9bd7dc154aa9fd98e4d312ea6aa6f3\",\"dweb:/ipfs/QmSDAtGs3SNuPQavYCYSav5oEqcwgn5qGfD2NBRxoDjmtV\"]},\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0x8f55a8813dff091a15fc5e8fff9371062f588bd80eefee45cd25eca3cf931159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e3add28e2019a45e699921a1d1ae7f696f744a24b2eb8e9ad812c599598d0fc\",\"dweb:/ipfs/QmTpuaRHoLxjuk5aa1u5jgYkCB9XY2grZX7ZxJnqwiKqE9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xb3f26ebbb8e70900fe809b9abd2206827e6b5e77df5cdd8838ed31c027131e2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0bdc8fd0274dddd108b3b84968dda34e9edf27d14b91ca0235220c914a5f1dd\",\"dweb:/ipfs/QmRsESkXuxDiKu4KhCEbEr4TEuLCuLMFvBwjbWm3Ewa4Dt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x1f207d34275acd299237f0e51f9ff32040063d05a6d34588b99974c8d9b5d427\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b57c5563e435661426f7e026340dcab47315b739e0a382a50f48687f5db8092\",\"dweb:/ipfs/QmY7aAEDH7mAEg1WY6EZD9rAT2rLi1NiH87ZMBT9R6Hfp5\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xc30f35014c118b6b494d297c4ab876cf4dc5abe91ce6c4b0d53cf8da2ecbd161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de467f6b95e7c0b1497863565a9a59ddf9391194445ef8e912ac19b97c95233f\",\"dweb:/ipfs/QmRRJpb1ndBGWfVMJWGcyqNa9SQPNeqzCp4nDKVBgkvHe4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x7ca50b2db181b128c3c202f67bbc2fc189628f41a8643027c445facc907a10b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1baa3e4dd802cf1e2ed3634f79f3b1f86397f1bcb819f55811da1a9bf6a6189c\",\"dweb:/ipfs/QmPmiK9Tj3P7fhnroK2REuendr4sjx4vjev7PRQJyxMob5\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xbec94e472f5fde800401cdc48fe89c0260ab92b22965ddce17a715f9825b4f12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d28923f397006622c72dccec7a22c9d5c4c8407c1285dace5e69f4a7d54545e5\",\"dweb:/ipfs/QmPh1BnF3mrcUx1UZnE5uKjavTomomrJ5wdPwh22NvJSuz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "action",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "timeStamp",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AccessedFunds",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "timeStamp",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AmountMigrated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "timeStamp",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractVerified",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "timeStamp",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnerAccessFunds",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_action",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "accessFunds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "extractFunds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migration"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifiedContract",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyContract"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "accessFunds(uint256,string)": {
            "details": "verified contract can access NRK tokens with this function only",
            "params": {
              "_action": "the purpose of NRK token",
              "_amount": "the amount of NRK tokens required by contract"
            }
          },
          "extractFunds(uint256)": {
            "details": "extract NRK tokens from this contract",
            "params": {
              "_amount": "Specific amount of NRK token needed to be removed from this contract"
            }
          },
          "initialize(address)": {
            "details": "Proxy initializer function sets new owner other than admin",
            "params": {
              "_owner": "The owner of this contract"
            }
          },
          "migration(uint256,address)": {
            "details": "this function is used to migrate the NRK tokens from this contract to another EOA or contract",
            "params": {
              "amount": "the amount of NRK tokens needed to migrate",
              "newAddress": "the address on which NRK tokens should be sent"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "verifyContract(address)": {
            "details": "verficy the contract for access rewards",
            "params": {
              "_contract": "is the contract address which can access NRK tokens"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "accessFunds(uint256,string)": {
            "notice": "only verified contracts by owner can access this functionthis function is non reentrant"
          },
          "extractFunds(uint256)": {
            "notice": "the contract owner can access this functionthis function is non reentrant"
          },
          "migration(uint256,address)": {
            "notice": "this functions can only be called by ownerthis function is non reentrant"
          },
          "verifiedContract(address)": {
            "notice": "mapping for verified contract which can be accessed by owner only"
          },
          "verifyContract(address)": {
            "notice": "this function can only accessed by owner"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/LiquidityPool.sol": "LiquidityPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ILiquidityPool.sol": {
        "keccak256": "0x53d8b4afe234f6dae154f6da1a0a950af9023bdebab67b395b67f990ba689fe3",
        "urls": [
          "bzz-raw://ce761749771b4de27c31082cc61c456d1a9bd7dc154aa9fd98e4d312ea6aa6f3",
          "dweb:/ipfs/QmSDAtGs3SNuPQavYCYSav5oEqcwgn5qGfD2NBRxoDjmtV"
        ],
        "license": "MIT"
      },
      "contracts/LiquidityPool.sol": {
        "keccak256": "0x8f55a8813dff091a15fc5e8fff9371062f588bd80eefee45cd25eca3cf931159",
        "urls": [
          "bzz-raw://6e3add28e2019a45e699921a1d1ae7f696f744a24b2eb8e9ad812c599598d0fc",
          "dweb:/ipfs/QmTpuaRHoLxjuk5aa1u5jgYkCB9XY2grZX7ZxJnqwiKqE9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xb3f26ebbb8e70900fe809b9abd2206827e6b5e77df5cdd8838ed31c027131e2c",
        "urls": [
          "bzz-raw://c0bdc8fd0274dddd108b3b84968dda34e9edf27d14b91ca0235220c914a5f1dd",
          "dweb:/ipfs/QmRsESkXuxDiKu4KhCEbEr4TEuLCuLMFvBwjbWm3Ewa4Dt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x1f207d34275acd299237f0e51f9ff32040063d05a6d34588b99974c8d9b5d427",
        "urls": [
          "bzz-raw://8b57c5563e435661426f7e026340dcab47315b739e0a382a50f48687f5db8092",
          "dweb:/ipfs/QmY7aAEDH7mAEg1WY6EZD9rAT2rLi1NiH87ZMBT9R6Hfp5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xc30f35014c118b6b494d297c4ab876cf4dc5abe91ce6c4b0d53cf8da2ecbd161",
        "urls": [
          "bzz-raw://de467f6b95e7c0b1497863565a9a59ddf9391194445ef8e912ac19b97c95233f",
          "dweb:/ipfs/QmRRJpb1ndBGWfVMJWGcyqNa9SQPNeqzCp4nDKVBgkvHe4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x7ca50b2db181b128c3c202f67bbc2fc189628f41a8643027c445facc907a10b6",
        "urls": [
          "bzz-raw://1baa3e4dd802cf1e2ed3634f79f3b1f86397f1bcb819f55811da1a9bf6a6189c",
          "dweb:/ipfs/QmPmiK9Tj3P7fhnroK2REuendr4sjx4vjev7PRQJyxMob5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xbec94e472f5fde800401cdc48fe89c0260ab92b22965ddce17a715f9825b4f12",
        "urls": [
          "bzz-raw://d28923f397006622c72dccec7a22c9d5c4c8407c1285dace5e69f4a7d54545e5",
          "dweb:/ipfs/QmPh1BnF3mrcUx1UZnE5uKjavTomomrJ5wdPwh22NvJSuz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/LiquidityPool.sol",
    "id": 297,
    "exportedSymbols": {
      "AddressUpgradeable": [
        58918
      ],
      "ContextUpgradeable": [
        58960
      ],
      "ILiquidityPool": [
        9
      ],
      "Initializable": [
        58588
      ],
      "LiquidityPool": [
        296
      ],
      "OwnableUpgradeable": [
        58419
      ],
      "ReentrancyGuard": [
        59782
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:4367:1",
    "nodes": [
      {
        "id": 11,
        "nodeType": "PragmaDirective",
        "src": "35:24:1",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 12,
        "nodeType": "ImportDirective",
        "src": "63:74:1",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 297,
        "sourceUnit": 58420,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13,
        "nodeType": "ImportDirective",
        "src": "139:51:1",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 297,
        "sourceUnit": 59783,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14,
        "nodeType": "ImportDirective",
        "src": "192:30:1",
        "nodes": [],
        "absolutePath": "contracts/ILiquidityPool.sol",
        "file": "./ILiquidityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 297,
        "sourceUnit": 10,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 296,
        "nodeType": "ContractDefinition",
        "src": "405:3995:1",
        "nodes": [
          {
            "id": 27,
            "nodeType": "EventDefinition",
            "src": "490:66:1",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "2f0ca928d7e629f2329ba461aa34594df001a516ffa5353d2dd549874d89e7db",
            "name": "ContractVerified",
            "nameLocation": "496:16:1",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "521:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "513:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "545:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "538:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:43:1"
            }
          },
          {
            "id": 35,
            "nodeType": "EventDefinition",
            "src": "562:112:1",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9f705416861499a09cd46d28e87ee1041fec713ff0db1698d34ed3bf62574a0e",
            "name": "AccessedFunds",
            "nameLocation": "568:13:1",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "600:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "592:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "action",
                  "nameLocation": "633:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "626:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "657:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "650:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:92:1"
            }
          },
          {
            "id": 43,
            "nodeType": "EventDefinition",
            "src": "680:75:1",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b5a07b1f4bc2f4ff306ef2ad16fb57d1a54b12930178ff22caa5169642b8ef41",
            "name": "AmountMigrated",
            "nameLocation": "686:14:1",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "709:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "701:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "725:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "717:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "744:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "737:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:54:1"
            }
          },
          {
            "id": 49,
            "nodeType": "EventDefinition",
            "src": "761:57:1",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c6ee7d3bab11983542e4dc677b2299dabf95765959bcaccbcccf54dc7dbf6628",
            "name": "OwnerAccessFunds",
            "nameLocation": "767:16:1",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "792:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "784:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "807:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "800:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:34:1"
            }
          },
          {
            "id": 54,
            "nodeType": "VariableDeclaration",
            "src": "926:48:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "826:94:1",
              "text": " @notice mapping for verified contract which can be accessed by owner only"
            },
            "functionSelector": "8632dbbe",
            "mutability": "mutable",
            "name": "verifiedContract",
            "nameLocation": "958:16:1",
            "scope": 296,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 53,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "934:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "926:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 52,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "945:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 66,
            "nodeType": "ModifierDefinition",
            "src": "983:118:1",
            "nodes": [],
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "1005:96:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 57,
                          "name": "verifiedContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1024:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 60,
                        "indexExpression": {
                          "expression": {
                            "id": 58,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1041:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1045:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1041:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1024:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e7472616374206973206e6f74207665726966696564",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1054:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06132845798b9e3827050ba2c2660813fd04f1f83c7ede43e2401b05d2bedce1",
                          "typeString": "literal_string \"contract is not verified\""
                        },
                        "value": "contract is not verified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06132845798b9e3827050ba2c2660813fd04f1f83c7ede43e2401b05d2bedce1",
                          "typeString": "literal_string \"contract is not verified\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1016:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:65:1"
                },
                {
                  "id": 64,
                  "nodeType": "PlaceholderStatement",
                  "src": "1092:1:1"
                }
              ]
            },
            "name": "isVerified",
            "nameLocation": "992:10:1",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1002:2:1"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 82,
            "nodeType": "FunctionDefinition",
            "src": "1248:136:1",
            "nodes": [],
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1313:71:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58314,
                      "src": "1324:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:16:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1369:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58393,
                      "src": "1351:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:25:1"
                }
              ]
            },
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "1109:133:1",
              "text": " @dev Proxy initializer function sets new owner other than admin\n @param _owner The owner of this contract"
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 72,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 71,
                  "name": "initializer",
                  "nameLocations": [
                    "1301:11:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58490,
                  "src": "1301:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1301:11:1"
              }
            ],
            "name": "initialize",
            "nameLocation": "1257:10:1",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1276:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1268:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1267:16:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:0:1"
            },
            "scope": 296,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116,
            "nodeType": "FunctionDefinition",
            "src": "1597:254:1",
            "nodes": [],
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1659:192:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "1678:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1699:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1691:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 92,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1691:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1691:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1678:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420636f6e74726163742061646472657373",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1703:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5d559618de365ea9d9be741e7ee7e42841366bee9c710626ecee327ca18b84b",
                          "typeString": "literal_string \"invalid contract address\""
                        },
                        "value": "invalid contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5d559618de365ea9d9be741e7ee7e42841366bee9c710626ecee327ca18b84b",
                          "typeString": "literal_string \"invalid contract address\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1670:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1670:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:60:1"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100,
                        "name": "verifiedContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1741:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "id": 101,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1758:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1741:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1771:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1741:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 107,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1808:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 110,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1826:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1832:9:1",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1826:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1819:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 108,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1819:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1819:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 106,
                      "name": "ContractVerified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1791:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$returns$__$",
                        "typeString": "function (address,uint32)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "EmitStatement",
                  "src": "1786:57:1"
                }
              ]
            },
            "documentation": {
              "id": 83,
              "nodeType": "StructuredDocumentation",
              "src": "1392:199:1",
              "text": " @dev verficy the contract for access rewards\n @notice this function can only accessed by owner\n @param _contract is the contract address which can access NRK tokens"
            },
            "functionSelector": "3d200b45",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1649:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58333,
                  "src": "1649:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1649:9:1"
              }
            ],
            "name": "verifyContract",
            "nameLocation": "1606:14:1",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1629:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1621:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1620:19:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1659:0:1"
            },
            "scope": 296,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 169,
            "nodeType": "FunctionDefinition",
            "src": "2192:441:1",
            "nodes": [],
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "2311:322:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 129,
                      "mutability": "mutable",
                      "name": "_contract",
                      "nameLocation": "2330:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "2322:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2322:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "expression": {
                      "id": 130,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2342:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2346:6:1",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2342:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2322:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 136,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2379:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$296",
                                  "typeString": "contract LiquidityPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$296",
                                  "typeString": "contract LiquidityPool"
                                }
                              ],
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2371:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 134,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2371:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2371:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2385:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2371:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 139,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "2396:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2371:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f204e524b20746f6b656e7320696e20706f6f6c",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2405:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ddb7e2ab4125efaf81a5c9923e3bc2271d05c1688e817308fea4cdcd881f46f",
                          "typeString": "literal_string \"No NRK tokens in pool\""
                        },
                        "value": "No NRK tokens in pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ddb7e2ab4125efaf81a5c9923e3bc2271d05c1688e817308fea4cdcd881f46f",
                          "typeString": "literal_string \"No NRK tokens in pool\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2363:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:66:1"
                },
                {
                  "assignments": [
                    145,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2448:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "2443:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2443:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 152,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2492:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 146,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "2461:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2471:4:1",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2461:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 148,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "2483:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2461:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2461:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2442:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 154,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2514:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6661696c656420746f2073656e64204e524b20746f6b656e73",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2523:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d7a677cb7e4b3fd88d019102ac74b518196d477c5e1d547ab7b54372552e399",
                          "typeString": "literal_string \"failed to send NRK tokens\""
                        },
                        "value": "failed to send NRK tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d7a677cb7e4b3fd88d019102ac74b518196d477c5e1d547ab7b54372552e399",
                          "typeString": "literal_string \"failed to send NRK tokens\""
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2506:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2506:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2506:45:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 159,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2581:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 160,
                        "name": "_action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2592:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 163,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2608:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2614:9:1",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2608:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2601:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 161,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2601:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2601:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 158,
                      "name": "AccessedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2567:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,string memory,uint32)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2567:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "EmitStatement",
                  "src": "2562:63:1"
                }
              ]
            },
            "baseFunctions": [
              8
            ],
            "documentation": {
              "id": 117,
              "nodeType": "StructuredDocumentation",
              "src": "1859:327:1",
              "text": " @dev verified contract can access NRK tokens with this function only\n @param _amount the amount of NRK tokens required by contract\n @param _action the purpose of NRK token\n @notice only verified contracts by owner can access this function\n @notice this function is non reentrant"
            },
            "functionSelector": "a32d2440",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 123,
                  "name": "isVerified",
                  "nameLocations": [
                    "2287:10:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "2287:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2287:10:1"
              },
              {
                "id": 126,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 125,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2298:12:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59747,
                  "src": "2298:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2298:12:1"
              }
            ],
            "name": "accessFunds",
            "nameLocation": "2201:11:1",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2231:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "2223:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_action",
                  "nameLocation": "2263:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "2249:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2212:65:1"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2311:0:1"
            },
            "scope": 296,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 173,
            "nodeType": "FunctionDefinition",
            "src": "2641:30:1",
            "nodes": [],
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "2669:2:1",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2649:2:1"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:1"
            },
            "scope": 296,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 177,
            "nodeType": "FunctionDefinition",
            "src": "2679:29:1",
            "nodes": [],
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2706:2:1",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2686:2:1"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2706:0:1"
            },
            "scope": 296,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 242,
            "nodeType": "FunctionDefinition",
            "src": "3085:573:1",
            "nodes": [],
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "3197:461:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 192,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3238:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$296",
                                  "typeString": "contract LiquidityPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$296",
                                  "typeString": "contract LiquidityPool"
                                }
                              ],
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3230:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 190,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3230:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3230:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3244:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3230:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 195,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "3255:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3230:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420696e73756666696369656e742062616c616e6365",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3276:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57e56f9c2860b8540bbf0d815899fbc4e9bdc75e219c193cfa70a16469b41bd7",
                          "typeString": "literal_string \"Contract insufficient balance\""
                        },
                        "value": "Contract insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57e56f9c2860b8540bbf0d815899fbc4e9bdc75e219c193cfa70a16469b41bd7",
                          "typeString": "literal_string \"Contract insufficient balance\""
                        }
                      ],
                      "id": 189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3208:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3208:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "3208:110:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 201,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "3337:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3346:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3337:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420616d6f756e74",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3349:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        },
                        "value": "invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        }
                      ],
                      "id": 200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3329:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3329:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:37:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 208,
                          "name": "newAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "3385:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3407:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3399:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 209,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3399:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3399:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3385:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642061646472657373",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3411:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225",
                          "typeString": "literal_string \"invalid address\""
                        },
                        "value": "invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225",
                          "typeString": "literal_string \"invalid address\""
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3377:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3377:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "3377:52:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 218,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "3460:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 219,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "3468:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 222,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3487:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3493:9:1",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3487:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3480:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 220,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3480:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3480:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 217,
                      "name": "AmountMigrated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "3445:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint32_$returns$__$",
                        "typeString": "function (uint256,address,uint32)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "EmitStatement",
                  "src": "3440:64:1"
                },
                {
                  "assignments": [
                    228,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3521:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 241,
                      "src": "3516:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3516:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 235,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3565:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 229,
                          "name": "newAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "3534:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3545:4:1",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3534:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 231,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "3557:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3534:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3534:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3515:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3587:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e61626c6520746f2073656e642076616c7565206f7220726563697069656e74206d61792068617665207265766572746564",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3596:53:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33354fc1fdcbbedf8d6928bb83956d7a561f27042977ea9a8a045fa518837fbd",
                          "typeString": "literal_string \"Unable to send value or recipient may have reverted\""
                        },
                        "value": "Unable to send value or recipient may have reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33354fc1fdcbbedf8d6928bb83956d7a561f27042977ea9a8a045fa518837fbd",
                          "typeString": "literal_string \"Unable to send value or recipient may have reverted\""
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3579:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3579:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:71:1"
                }
              ]
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "2716:363:1",
              "text": " @dev this function is used to migrate the NRK tokens from this contract to another EOA or contract\n @param amount the amount of NRK tokens needed to migrate\n @param newAddress the address on which NRK tokens should be sent\n @notice this functions can only be called by owner\n @notice this function is non reentrant"
            },
            "functionSelector": "8c6f3349",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3174:12:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59747,
                  "src": "3174:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3174:12:1"
              },
              {
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3187:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58333,
                  "src": "3187:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:9:1"
              }
            ],
            "name": "migration",
            "nameLocation": "3094:9:1",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3122:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3114:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3114:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "3147:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3139:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3103:61:1"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3197:0:1"
            },
            "scope": 296,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 295,
            "nodeType": "FunctionDefinition",
            "src": "3934:463:1",
            "nodes": [],
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "4005:392:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 255,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4046:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$296",
                                  "typeString": "contract LiquidityPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$296",
                                  "typeString": "contract LiquidityPool"
                                }
                              ],
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4038:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 253,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4038:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4038:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4052:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4038:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 258,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "4063:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4038:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420696e73756666696369656e742062616c616e6365",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4085:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57e56f9c2860b8540bbf0d815899fbc4e9bdc75e219c193cfa70a16469b41bd7",
                          "typeString": "literal_string \"Contract insufficient balance\""
                        },
                        "value": "Contract insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57e56f9c2860b8540bbf0d815899fbc4e9bdc75e219c193cfa70a16469b41bd7",
                          "typeString": "literal_string \"Contract insufficient balance\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4016:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4016:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "4016:111:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 264,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "4146:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4156:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4146:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420616d6f756e74",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4159:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        },
                        "value": "invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4138:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4138:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "4138:38:1"
                },
                {
                  "assignments": [
                    271,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 271,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4193:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "4188:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 270,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4188:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 279,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4238:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 272,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4206:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4210:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4206:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4217:4:1",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4206:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 275,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "4229:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4206:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4206:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4187:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 281,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "4260:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e61626c6520746f2073656e642076616c7565206f7220726563697069656e74206d61792068617665207265766572746564",
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4269:53:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33354fc1fdcbbedf8d6928bb83956d7a561f27042977ea9a8a045fa518837fbd",
                          "typeString": "literal_string \"Unable to send value or recipient may have reverted\""
                        },
                        "value": "Unable to send value or recipient may have reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33354fc1fdcbbedf8d6928bb83956d7a561f27042977ea9a8a045fa518837fbd",
                          "typeString": "literal_string \"Unable to send value or recipient may have reverted\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4252:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4252:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "4252:71:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "4356:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 289,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4372:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4378:9:1",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4372:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4365:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 287,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4365:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4365:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 285,
                      "name": "OwnerAccessFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "4339:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                        "typeString": "function (uint256,uint32)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "EmitStatement",
                  "src": "4334:55:1"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "3666:262:1",
              "text": " @dev extract NRK tokens from this contract\n @param _amount Specific amount of NRK token needed to be removed from this contract\n @notice the contract owner can access this function\n @notice this function is non reentrant"
            },
            "functionSelector": "aaafa23f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3982:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58333,
                  "src": "3982:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3982:9:1"
              },
              {
                "id": 250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 249,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3992:12:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59747,
                  "src": "3992:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3992:12:1"
              }
            ],
            "name": "extractFunds",
            "nameLocation": "3943:12:1",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3964:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3956:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3956:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3955:17:1"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4005:0:1"
            },
            "scope": 296,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "431:18:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58419,
              "src": "431:18:1"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "431:18:1"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "451:15:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59782,
              "src": "451:15:1"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "451:15:1"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ILiquidityPool",
              "nameLocations": [
                "468:14:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9,
              "src": "468:14:1"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "468:14:1"
          }
        ],
        "canonicalName": "LiquidityPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "226:177:1",
          "text": " @title Liqudity provider contract for rewards staking contract\n @author https://anmol-dhiman.netlify.app/\n @notice Provide NRK tokens only to verified address"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          296,
          9,
          59782,
          58419,
          58960,
          58588
        ],
        "name": "LiquidityPool",
        "nameLocation": "414:13:1",
        "scope": 297,
        "usedErrors": [],
        "usedEvents": [
          27,
          35,
          43,
          49,
          58304,
          58434
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 1
}