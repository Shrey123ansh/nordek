{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMessageOnDeployment",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetNewMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yourContract",
      "outputs": [
        {
          "internalType": "contract YourContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506118698061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c8063831eca411162000097578063b5508aa9116200006e578063b5508aa914620001bc578063ba414fa614620001c6578063e20c9f7114620001e1578063fa7626d414620001eb57600080fd5b8063831eca41146200018f57806385226c811462000199578063916a17c614620001b257600080fd5b80633e5e3c2311620000d85780633e5e3c2314620001585780633f7286f4146200016257806363d2ea6d146200016c57806366d9a9a0146200017657600080fd5b80630a9254e41462000102578063101d28e4146200010e5780631ed7831c146200013f575b600080fd5b6200010c620001f9565b005b601b5462000122906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b62000149620002d1565b60405162000136919062000ad9565b6200014962000335565b6200014962000397565b6200010c620003f9565b62000180620004a1565b60405162000136919062000b28565b6200010c62000594565b620001a362000696565b60405162000136919062000c05565b6200018062000770565b620001a36200085a565b620001d062000934565b604051901515815260200162000136565b6200014962000a69565b600054620001d09060ff1681565b6040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa1580156200024d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000273919062000c83565b604051620002819062000acb565b6001600160a01b039091168152602001604051809103906000f080158015620002ae573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156200032b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200030c575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156200032b576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200030c575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156200032b576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200030c575050505050905090565b601b54604080516303bda43360e61b815290517ffc2e1998e4fabd980b592d3f2694fda3ebc824815a4fa29092582e825411fd0a926001600160a01b03169163ef690cc09160048083019260009291908290030181865afa15801562000463573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200048d919081019062000ccb565b80519060200120146200049f57600080fd5b565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156200058b5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200057257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620005335790505b50505050508152505081526020019060010190620004c5565b50505050905090565b601b54604051635209b43160e11b815260206004820152601860248201527f4c6561726e2053636166666f6c642d455448203221203a29000000000000000060448201526001600160a01b039091169063a413686290606401600060405180830381600087803b1580156200060857600080fd5b505af11580156200061d573d6000803e3d6000fd5b505050507f02de0d935aa8bae86215156624c63bb7462adc4d22b2c49574e4ad33da36ce31601b60009054906101000a90046001600160a01b03166001600160a01b031663ef690cc06040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000463573d6000803e3d6000fd5b60606011805480602002602001604051908101604052809291908181526020016000905b828210156200058b578382906000526020600020018054620006dc9062000d84565b80601f01602080910402602001604051908101604052809291908181526020018280546200070a9062000d84565b80156200075b5780601f106200072f576101008083540402835291602001916200075b565b820191906000526020600020905b8154815290600101906020018083116200073d57829003601f168201915b505050505081526020019060010190620006ba565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156200058b5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200084157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620008025790505b5050505050815250508152602001906001019062000794565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156200058b578382906000526020600020018054620008a09062000d84565b80601f0160208091040260200160405190810160405280929190818152602001828054620008ce9062000d84565b80156200091f5780601f10620008f3576101008083540402835291602001916200091f565b820191906000526020600020905b8154815290600101906020018083116200090157829003601f168201915b5050505050815260200190600101906200087e565b60008054610100900460ff1615620009555750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000a645760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091620009e6917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000dc0565b60408051601f198184030181529082905262000a029162000df3565b6000604051808303816000865af19150503d806000811462000a41576040519150601f19603f3d011682016040523d82523d6000602084013e62000a46565b606091505b509150508080602001905181019062000a60919062000e11565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156200032b576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200030c575050505050905090565b6109fe8062000e3683390190565b6020808252825182820181905260009190848201906040850190845b8181101562000b1c5783516001600160a01b03168352928401929184019160010162000af5565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562000bd057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562000bba5783516001600160e01b0319168252928b019260019290920191908b019062000b8e565b50978a0197955050509187019160010162000b50565b50919998505050505050505050565b60005b8381101562000bfc57818101518382015260200162000be2565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000c7657878503603f190184528151805180875262000c56818989018a850162000bdf565b601f01601f19169590950186019450928501929085019060010162000c2c565b5092979650505050505050565b60006020828403121562000c9657600080fd5b81516001600160a01b038116811462000cae57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000cde57600080fd5b815167ffffffffffffffff8082111562000cf757600080fd5b818401915084601f83011262000d0c57600080fd5b81518181111562000d215762000d2162000cb5565b604051601f8201601f19908116603f0116810190838211818310171562000d4c5762000d4c62000cb5565b8160405282815287602084870101111562000d6657600080fd5b62000d7983602083016020880162000bdf565b979650505050505050565b600181811c9082168062000d9957607f821691505b60208210810362000dba57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b031983168152815160009062000de581600485016020870162000bdf565b919091016004019392505050565b6000825162000e0781846020870162000bdf565b9190910192915050565b60006020828403121562000e2457600080fd5b8151801515811462000cae57600080fdfe60e0604052601c60a09081527f4275696c64696e6720556e73746f707061626c6520417070732121210000000060c05260009061003c9082610127565b506001805460ff19169055600060025534801561005857600080fd5b506040516109fe3803806109fe833981016040819052610077916101e6565b6001600160a01b0316608052610216565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100b257607f821691505b6020821081036100d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561012257600081815260208120601f850160051c810160208610156100ff5750805b601f850160051c820191505b8181101561011e5782815560010161010b565b5050505b505050565b81516001600160401b0381111561014057610140610088565b6101548161014e845461009e565b846100d8565b602080601f83116001811461018957600084156101715750858301515b600019600386901b1c1916600185901b17855561011e565b600085815260208120601f198616915b828110156101b857888601518255948401946001909101908401610199565b50858210156101d65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156101f857600080fd5b81516001600160a01b038116811461020f57600080fd5b9392505050565b6080516107c061023e6000396000818160a9015281816101a3015261020901526107c06000f3fe6080604052600436106100745760003560e01c8063a41368621161004e578063a41368621461010c578063cea49c3c1461011f578063e0a73a931461014c578063ef690cc01461017657600080fd5b80633ccfd60b146100805780638da5cb5b1461009757806397feba9d146100e857600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b50610095610198565b005b3480156100a357600080fd5b506100cb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f457600080fd5b506100fe60025481565b6040519081526020016100df565b61009561011a3660046104bb565b6102c2565b34801561012b57600080fd5b506100fe61013a36600461056c565b60036020526000908152604090205481565b34801561015857600080fd5b506001546101669060ff1681565b60405190151581526020016100df565b34801561018257600080fd5b5061018b6103b8565b6040516100df91906105e2565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102055760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329027bbb732b960991b60448201526064015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03164760405160006040518083038185875af1925050503d8060008114610272576040519150601f19603f3d011682016040523d82523d6000602084013e610277565b606091505b50509050806102bf5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101fc565b50565b6102f76040518060400160405280601481526020017353657474696e67206e6577206772656574696e6760601b815250610446565b61030081610446565b600061030c828261067e565b50600160026000828254610320919061073e565b909155505033600090815260036020526040812080546001929061034590849061073e565b90915550503415610361576001805460ff19168117905561036c565b6001805460ff191690555b336001600160a01b03167f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad826000341160006040516103ad93929190610765565b60405180910390a250565b600080546103c5906105f5565b80601f01602080910402602001604051908101604052809291908181526020018280546103f1906105f5565b801561043e5780601f106104135761010080835404028352916020019161043e565b820191906000526020600020905b81548152906001019060200180831161042157829003601f168201915b505050505081565b6102bf8160405160240161045a91906105e2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104cd57600080fd5b813567ffffffffffffffff808211156104e557600080fd5b818401915084601f8301126104f957600080fd5b81358181111561050b5761050b6104a5565b604051601f8201601f19908116603f01168101908382118183101715610533576105336104a5565b8160405282815287602084870101111561054c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561057e57600080fd5b81356001600160a01b038116811461059557600080fd5b9392505050565b6000815180845260005b818110156105c2576020818501810151868301820152016105a6565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610595602083018461059c565b600181811c9082168061060957607f821691505b60208210810361062957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561067957600081815260208120601f850160051c810160208610156106565750805b601f850160051c820191505b8181101561067557828155600101610662565b5050505b505050565b815167ffffffffffffffff811115610698576106986104a5565b6106ac816106a684546105f5565b8461062f565b602080601f8311600181146106e157600084156106c95750858301515b600019600386901b1c1916600185901b178555610675565b600085815260208120601f198616915b82811015610710578886015182559484019460019091019084016106f1565b508582101561072e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561075f57634e487b7160e01b600052601160045260246000fd5b92915050565b606081526000610778606083018661059c565b9315156020830152506040015291905056fea26469706673582212207362c34b9cddf0f64073ac5bb81ac08537da45792fc54fd270795cb0c9ad044564736f6c63430008150033a264697066735822122018ab53fd99584209a36704a96d537a4cbd70ccb8cf2da0ded47c981de4ed38bf64736f6c63430008150033",
    "sourceMap": "141:639:40:-:0;;;1609:26:12;;;1631:4;-1:-1:-1;;1609:26:12;;;;;;;;3191:44:16;;;;;;;;;;;141:639:40;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "141:639:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:86;;;:::i;:::-;;182:32;;;;;-1:-1:-1;;;;;182:32:40;;;;;;-1:-1:-1;;;;;207:32:41;;;189:51;;177:2;162:18;182:32:40;;;;;;;;2238:136:19;;;:::i;:::-;;;;;;;:::i;3027:135::-;;;:::i;2720:143::-;;;:::i;317:202:40:-;;;:::i;2532:180:19:-;;;:::i;:::-;;;;;;;:::i;527:250:40:-;;;:::i;2382:142:19:-;;;:::i;:::-;;;;;;;:::i;2871:148::-;;;:::i;1935:143::-;;;:::i;1865:600:12:-;;;:::i;:::-;;;3927:14:41;;3920:22;3902:41;;3890:2;3875:18;1865:600:12;3762:187:41;2086:144:19;;;:::i;1609:26:12:-;;;;;;;;;223:86:40;290:10;;-1:-1:-1;;;;;;290:10:40;;298:1;290:10;;;4108:25:41;290:7:40;;;;4081:18:41;;290:10:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;273:28;;;;;:::i;:::-;-1:-1:-1;;;;;207:32:41;;;189:51;;177:2;162:18;273:28:40;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;258:12:40;:43;;-1:-1:-1;;;;;;258:43:40;-1:-1:-1;;;;;258:43:40;;;;;;;;;;223:86::o;2238:136:19:-;2285:33;2350:16;2331:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2331:35:19;;;;;;;;;;;;;;;;;;;;;;;2238:136;:::o;3027:135::-;3073:33;3138:16;3119:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3119:35:19;;;;;;;;;;;;;;;;;;;;;;3027:135;:::o;2720:143::-;2768:35;2837:18;2816:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2816:39:19;;;;;;;;;;;;;;;;;;;;;;2720:143;:::o;317:202:40:-;413:12;;:23;;;-1:-1:-1;;;413:23:40;;;;459:41;;-1:-1:-1;;;;;413:12:40;;:21;;:23;;;;;:12;;:23;;;;;;;:12;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;413:23:40;;;;;;;;;;;;:::i;:::-;397:41;;;;;;:103;375:136;;;;;;317:202::o;2532:180:19:-;2588:48;2678:26;2649:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2649:55:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2649:55:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2532:180;:::o;527:250:40:-;574:12;;:52;;-1:-1:-1;;;574:52:40;;5883:2:41;574:52:40;;;5865:21:41;5922:2;5902:18;;;5895:30;5961:26;5941:18;;;5934:54;-1:-1:-1;;;;;574:12:40;;;;:24;;6005:18:41;;574:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;721:37;675:12;;;;;;;;;-1:-1:-1;;;;;675:12:40;-1:-1:-1;;;;;675:21:40;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2382:142:19;2430:34;2498:18;2477:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2871:148;2919:40;2993:18;2972:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2972:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2972:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1935:143;1984:34;2052:18;2031:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:600:12;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:12;;;;;;;;1865:600::o;1916:542::-;1991:17;3077:42;3065:55;3148:16;2031:382;;2251:43;;;1712:64;2251:43;;;6593:51:41;;;-1:-1:-1;;;6660:18:41;;;6653:34;2251:43:12;;;;;;;;;6566:18:41;;;2251:43:12;;;-1:-1:-1;;1712:64:12;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:12;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:12:o;2086:144:19:-;2135:35;2204:18;2183:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2183:39:19;;;;;;;;;;;;;;;;;;;;;;2086:144;:::o;-1:-1:-1:-;;;;;;;;:::o;251:658:41:-;422:2;474:21;;;544:13;;447:18;;;566:22;;;393:4;;422:2;645:15;;;;619:2;604:18;;;393:4;688:195;702:6;699:1;696:13;688:195;;;767:13;;-1:-1:-1;;;;;763:39:41;751:52;;858:15;;;;823:12;;;;799:1;717:9;688:195;;;-1:-1:-1;900:3:41;;251:658;-1:-1:-1;;;;;;251:658:41:o;914:1569::-;1118:4;1147:2;1187;1176:9;1172:18;1217:2;1206:9;1199:21;1240:6;1275;1269:13;1306:6;1298;1291:22;1332:2;1322:12;;1365:2;1354:9;1350:18;1343:25;;1427:2;1417:6;1414:1;1410:14;1399:9;1395:30;1391:39;1465:2;1457:6;1453:15;1486:1;1507;1517:937;1533:6;1528:3;1525:15;1517:937;;;1602:22;;;-1:-1:-1;;1598:36:41;1586:49;;1658:13;;1745:9;;-1:-1:-1;;;;;1741:35:41;1726:51;;1816:11;;1810:18;1848:15;;;1841:27;;;1929:19;;1698:15;;;1961:24;;;2051:21;;;;2096:1;;2019:2;2007:15;;;2110:236;2126:8;2121:3;2118:17;2110:236;;;2207:15;;-1:-1:-1;;;;;;2203:42:41;2189:57;;2315:17;;;;2154:1;2145:11;;;;;2272:14;;;;2110:236;;;-1:-1:-1;2432:12:41;;;;2369:5;-1:-1:-1;;;2397:15:41;;;;1559:1;1550:11;1517:937;;;-1:-1:-1;2471:6:41;;914:1569;-1:-1:-1;;;;;;;;;914:1569:41:o;2488:250::-;2573:1;2583:113;2597:6;2594:1;2591:13;2583:113;;;2673:11;;;2667:18;2654:11;;;2647:39;2619:2;2612:10;2583:113;;;-1:-1:-1;;2730:1:41;2712:16;;2705:27;2488:250::o;2743:1014::-;2905:4;2934:2;2974;2963:9;2959:18;3004:2;2993:9;2986:21;3027:6;3062;3056:13;3093:6;3085;3078:22;3131:2;3120:9;3116:18;3109:25;;3193:2;3183:6;3180:1;3176:14;3165:9;3161:30;3157:39;3143:53;;3231:2;3223:6;3219:15;3252:1;3262:466;3276:6;3273:1;3270:13;3262:466;;;3341:22;;;-1:-1:-1;;3337:36:41;3325:49;;3397:13;;3439:9;;3461:24;;;3498:74;3439:9;3546:15;;;3533:11;;;3498:74;:::i;:::-;3638:2;3615:17;-1:-1:-1;;3611:31:41;3599:44;;;;3595:53;;;-1:-1:-1;3706:12:41;;;;3671:15;;;;3298:1;3291:9;3262:466;;;-1:-1:-1;3745:6:41;;2743:1014;-1:-1:-1;;;;;;;2743:1014:41:o;4144:290::-;4214:6;4267:2;4255:9;4246:7;4242:23;4238:32;4235:52;;;4283:1;4280;4273:12;4235:52;4309:16;;-1:-1:-1;;;;;4354:31:41;;4344:42;;4334:70;;4400:1;4397;4390:12;4334:70;4423:5;4144:290;-1:-1:-1;;;4144:290:41:o;4647:127::-;4708:10;4703:3;4699:20;4696:1;4689:31;4739:4;4736:1;4729:15;4763:4;4760:1;4753:15;4779:897;4859:6;4912:2;4900:9;4891:7;4887:23;4883:32;4880:52;;;4928:1;4925;4918:12;4880:52;4961:9;4955:16;4990:18;5031:2;5023:6;5020:14;5017:34;;;5047:1;5044;5037:12;5017:34;5085:6;5074:9;5070:22;5060:32;;5130:7;5123:4;5119:2;5115:13;5111:27;5101:55;;5152:1;5149;5142:12;5101:55;5181:2;5175:9;5203:2;5199;5196:10;5193:36;;;5209:18;;:::i;:::-;5284:2;5278:9;5252:2;5338:13;;-1:-1:-1;;5334:22:41;;;5358:2;5330:31;5326:40;5314:53;;;5382:18;;;5402:22;;;5379:46;5376:72;;;5428:18;;:::i;:::-;5468:10;5464:2;5457:22;5503:2;5495:6;5488:18;5543:7;5538:2;5533;5529;5525:11;5521:20;5518:33;5515:53;;;5564:1;5561;5554:12;5515:53;5577:68;5642:2;5637;5629:6;5625:15;5620:2;5616;5612:11;5577:68;:::i;:::-;5664:6;4779:897;-1:-1:-1;;;;;;;4779:897:41:o;6034:380::-;6113:1;6109:12;;;;6156;;;6177:61;;6231:4;6223:6;6219:17;6209:27;;6177:61;6284:2;6276:6;6273:14;6253:18;6250:38;6247:161;;6330:10;6325:3;6321:20;6318:1;6311:31;6365:4;6362:1;6355:15;6393:4;6390:1;6383:15;6247:161;;6034:380;;;:::o;6698:384::-;-1:-1:-1;;;;;;6883:33:41;;6871:46;;6940:13;;6853:3;;6962:74;6940:13;7025:1;7016:11;;7009:4;6997:17;;6962:74;:::i;:::-;7056:16;;;;7074:1;7052:24;;6698:384;-1:-1:-1;;;6698:384:41:o;7087:287::-;7216:3;7254:6;7248:13;7270:66;7329:6;7324:3;7317:4;7309:6;7305:17;7270:66;:::i;:::-;7352:16;;;;;7087:287;-1:-1:-1;;7087:287:41:o;7379:277::-;7446:6;7499:2;7487:9;7478:7;7474:23;7470:32;7467:52;;;7515:1;7512;7505:12;7467:52;7547:9;7541:16;7600:5;7593:13;7586:21;7579:5;7576:32;7566:60;;7622:1;7619;7612:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testMessageOnDeployment()": "63d2ea6d",
    "testSetNewMessage()": "831eca41",
    "yourContract()": "101d28e4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMessageOnDeployment\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetNewMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yourContract\",\"outputs\":[{\"internalType\":\"contract YourContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/YourContract.t.sol\":\"YourContractTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/YourContract.sol\":{\"keccak256\":\"0x035157265ad5f8b076fd8281e7429503d01257bd03f2da1b0445f9429da2f32f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cff355c5ac34a2b6a70da47bd60b88f53b6c963420fb7e8646b8552118f2bc5\",\"dweb:/ipfs/QmbszeKAMf5CUhea7VVVXwRVJmQcQ3QBh6gmPGGd65E7R3\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x4be0c6bbe6bc0e629e6692c947ae0e2e245d2f0ac54a0a40399173294e1df8b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b682ee7fd200c594f806be478c194b3d103207e092a4c9e80d7c916f74a4f40\",\"dweb:/ipfs/Qmaponoz626oaWVVPbsvRrpwKM1nzLi2bNzC7QKMcqu2gi\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa9e93d0df6bfb1bb8d7933ed017f1edfb6b792c42f36024a645c199e4ca814d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d2f851a608d4a155ed55c32084ad1e3add09245c531965b1f424c7f28fbe02\",\"dweb:/ipfs/QmTErty2h5kkroXnJLsTcjK8HnCZMJgCC31akGVhRwX8DK\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x37280e992ec8aa155511bb453c69129fca905cab6461bcbc18241bd378a437eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7420d01753a24eaba08f712e3c657f42c747e59474d95c06ccdc04bbf78887\",\"dweb:/ipfs/QmYfNdr9z6v29W1Q9ttNfkeM5nZHpoVMWtNWrqisjUM6kN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x65fd0eeda28da592bf035912ab236b353a1f2b93c4372d2f48370e075bea6dc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db136c28bc3f1c73fc581028a18ef94d05aa5ec013396c4a0fde529ceb782139\",\"dweb:/ipfs/QmTAe7RzMAokM9WyifonX1rLgAfCP9r1Z1EC1JgyyAiybX\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xfa03724d9e5ce5a0c31175d2f91a55b5bf70bbbd8384cc79e7216c43d0a10f9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cb1db56786845b0de1309d7034a072ef7aff57b63c731edefbb383b281340f5\",\"dweb:/ipfs/QmXsXekD3keURjKkpyWAoetpGx4fWXmCt41Y3szEWpxvYa\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254\",\"dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xeb89dc294e4b1d2bdb04ea0e4e1a6255fb465d343428b237ce9866ffa9c59903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://421d0673ed566fac67f45a46693a15456e2cb446659166d0d43f46dc3f2ad99c\",\"dweb:/ipfs/QmbZ7Rjv4EZHjdDmPAaXrodqLEoadY5QZ31KZ7kczeMUzp\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x8437dbfaad83b1a8b301de2cb672d8824dfc1a4d8b13dd803bf1cc04a54b6ac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c647d77cd2a8d8601ddf609bcab3e24c5be842742363637e7b36497e7ddedf69\",\"dweb:/ipfs/QmUU79Me43ZBPL62TeM4bPAxVZUiPG1GzEMRGJ6RXrpSWx\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"test/YourContract.t.sol\":{\"keccak256\":\"0xbfc82e6b491747ec3622730c07b65f5fac8b50b942df9d1c94872d9fe5c3c3eb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3b1c4b83bd43a50ea33b2b242061c6b9340b38596933407ebd06c41fae144ba3\",\"dweb:/ipfs/QmTogHhi2Q1GGqYJNCUKCK6uaC4eFfFdHNtCNvwUMvA6Dw\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testMessageOnDeployment"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetNewMessage"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "yourContract",
          "outputs": [
            {
              "internalType": "contract YourContract",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/YourContract.t.sol": "YourContractTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/YourContract.sol": {
        "keccak256": "0x035157265ad5f8b076fd8281e7429503d01257bd03f2da1b0445f9429da2f32f",
        "urls": [
          "bzz-raw://3cff355c5ac34a2b6a70da47bd60b88f53b6c963420fb7e8646b8552118f2bc5",
          "dweb:/ipfs/QmbszeKAMf5CUhea7VVVXwRVJmQcQ3QBh6gmPGGd65E7R3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x4be0c6bbe6bc0e629e6692c947ae0e2e245d2f0ac54a0a40399173294e1df8b9",
        "urls": [
          "bzz-raw://4b682ee7fd200c594f806be478c194b3d103207e092a4c9e80d7c916f74a4f40",
          "dweb:/ipfs/Qmaponoz626oaWVVPbsvRrpwKM1nzLi2bNzC7QKMcqu2gi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa9e93d0df6bfb1bb8d7933ed017f1edfb6b792c42f36024a645c199e4ca814d5",
        "urls": [
          "bzz-raw://70d2f851a608d4a155ed55c32084ad1e3add09245c531965b1f424c7f28fbe02",
          "dweb:/ipfs/QmTErty2h5kkroXnJLsTcjK8HnCZMJgCC31akGVhRwX8DK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x37280e992ec8aa155511bb453c69129fca905cab6461bcbc18241bd378a437eb",
        "urls": [
          "bzz-raw://cb7420d01753a24eaba08f712e3c657f42c747e59474d95c06ccdc04bbf78887",
          "dweb:/ipfs/QmYfNdr9z6v29W1Q9ttNfkeM5nZHpoVMWtNWrqisjUM6kN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x65fd0eeda28da592bf035912ab236b353a1f2b93c4372d2f48370e075bea6dc2",
        "urls": [
          "bzz-raw://db136c28bc3f1c73fc581028a18ef94d05aa5ec013396c4a0fde529ceb782139",
          "dweb:/ipfs/QmTAe7RzMAokM9WyifonX1rLgAfCP9r1Z1EC1JgyyAiybX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xfa03724d9e5ce5a0c31175d2f91a55b5bf70bbbd8384cc79e7216c43d0a10f9d",
        "urls": [
          "bzz-raw://2cb1db56786845b0de1309d7034a072ef7aff57b63c731edefbb383b281340f5",
          "dweb:/ipfs/QmXsXekD3keURjKkpyWAoetpGx4fWXmCt41Y3szEWpxvYa"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357",
        "urls": [
          "bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254",
          "dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xeb89dc294e4b1d2bdb04ea0e4e1a6255fb465d343428b237ce9866ffa9c59903",
        "urls": [
          "bzz-raw://421d0673ed566fac67f45a46693a15456e2cb446659166d0d43f46dc3f2ad99c",
          "dweb:/ipfs/QmbZ7Rjv4EZHjdDmPAaXrodqLEoadY5QZ31KZ7kczeMUzp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x8437dbfaad83b1a8b301de2cb672d8824dfc1a4d8b13dd803bf1cc04a54b6ac1",
        "urls": [
          "bzz-raw://c647d77cd2a8d8601ddf609bcab3e24c5be842742363637e7b36497e7ddedf69",
          "dweb:/ipfs/QmUU79Me43ZBPL62TeM4bPAxVZUiPG1GzEMRGJ6RXrpSWx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "test/YourContract.t.sol": {
        "keccak256": "0xbfc82e6b491747ec3622730c07b65f5fac8b50b942df9d1c94872d9fe5c3c3eb",
        "urls": [
          "bzz-raw://3b1c4b83bd43a50ea33b2b242061c6b9340b38596933407ebd06c41fae144ba3",
          "dweb:/ipfs/QmTogHhi2Q1GGqYJNCUKCK6uaC4eFfFdHNtCNvwUMvA6Dw"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/YourContract.t.sol",
    "id": 48651,
    "exportedSymbols": {
      "DSTest": [
        5638
      ],
      "StdAssertions": [
        7170
      ],
      "StdChains": [
        7863
      ],
      "StdCheats": [
        10681
      ],
      "StdInvariant": [
        10971
      ],
      "StdStorage": [
        11721
      ],
      "StdStyle": [
        14385
      ],
      "StdUtils": [
        15233
      ],
      "Test": [
        15284
      ],
      "TestBase": [
        5704
      ],
      "Vm": [
        16811
      ],
      "YourContract": [
        2088
      ],
      "YourContractTest": [
        48650
      ],
      "console": [
        24875
      ],
      "console2": [
        33000
      ],
      "safeconsole": [
        46238
      ],
      "stdError": [
        10747
      ],
      "stdJson": [
        11547
      ],
      "stdMath": [
        11689
      ],
      "stdStorage": [
        13174
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:742:40",
    "nodes": [
      {
        "id": 48583,
        "nodeType": "PragmaDirective",
        "src": "40:24:40",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 48584,
        "nodeType": "ImportDirective",
        "src": "68:28:40",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48651,
        "sourceUnit": 15285,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48585,
        "nodeType": "ImportDirective",
        "src": "98:39:40",
        "nodes": [],
        "absolutePath": "contracts/YourContract.sol",
        "file": "../contracts/YourContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48651,
        "sourceUnit": 2089,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48650,
        "nodeType": "ContractDefinition",
        "src": "141:639:40",
        "nodes": [
          {
            "id": 48590,
            "nodeType": "VariableDeclaration",
            "src": "182:32:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "101d28e4",
            "mutability": "mutable",
            "name": "yourContract",
            "nameLocation": "202:12:40",
            "scope": 48650,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_YourContract_$2088",
              "typeString": "contract YourContract"
            },
            "typeName": {
              "id": 48589,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48588,
                "name": "YourContract",
                "nameLocations": [
                  "182:12:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2088,
                "src": "182:12:40"
              },
              "referencedDeclaration": 2088,
              "src": "182:12:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_YourContract_$2088",
                "typeString": "contract YourContract"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48605,
            "nodeType": "FunctionDefinition",
            "src": "223:86:40",
            "nodes": [],
            "body": {
              "id": 48604,
              "nodeType": "Block",
              "src": "247:62:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48593,
                      "name": "yourContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48590,
                      "src": "258:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YourContract_$2088",
                        "typeString": "contract YourContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 48599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "298:1:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 48597,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5697,
                              "src": "290:2:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$16811",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 48598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "293:4:40",
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15361,
                            "src": "290:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) pure external returns (address)"
                            }
                          },
                          "id": 48600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "290:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "273:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_YourContract_$2088_$",
                          "typeString": "function (address) returns (contract YourContract)"
                        },
                        "typeName": {
                          "id": 48595,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48594,
                            "name": "YourContract",
                            "nameLocations": [
                              "277:12:40"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2088,
                            "src": "277:12:40"
                          },
                          "referencedDeclaration": 2088,
                          "src": "277:12:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_YourContract_$2088",
                            "typeString": "contract YourContract"
                          }
                        }
                      },
                      "id": 48601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "273:28:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YourContract_$2088",
                        "typeString": "contract YourContract"
                      }
                    },
                    "src": "258:43:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_YourContract_$2088",
                      "typeString": "contract YourContract"
                    }
                  },
                  "id": 48603,
                  "nodeType": "ExpressionStatement",
                  "src": "258:43:40"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "232:5:40",
            "parameters": {
              "id": 48591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:40"
            },
            "returnParameters": {
              "id": 48592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "247:0:40"
            },
            "scope": 48650,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48624,
            "nodeType": "FunctionDefinition",
            "src": "317:202:40",
            "nodes": [],
            "body": {
              "id": 48623,
              "nodeType": "Block",
              "src": "364:155:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 48620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 48612,
                                      "name": "yourContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48590,
                                      "src": "413:12:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_YourContract_$2088",
                                        "typeString": "contract YourContract"
                                      }
                                    },
                                    "id": 48613,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "426:8:40",
                                    "memberName": "greeting",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1955,
                                    "src": "413:21:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 48614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "413:23:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 48611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "407:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 48610,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "407:5:40",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 48615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "407:30:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 48609,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "397:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 48616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "397:41:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "4275696c64696e6720556e73746f707061626c652041707073212121",
                              "id": 48618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "469:30:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fc2e1998e4fabd980b592d3f2694fda3ebc824815a4fa29092582e825411fd0a",
                                "typeString": "literal_string \"Building Unstoppable Apps!!!\""
                              },
                              "value": "Building Unstoppable Apps!!!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fc2e1998e4fabd980b592d3f2694fda3ebc824815a4fa29092582e825411fd0a",
                                "typeString": "literal_string \"Building Unstoppable Apps!!!\""
                              }
                            ],
                            "id": 48617,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "459:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 48619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "459:41:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "397:103:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "375:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 48621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:136:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48622,
                  "nodeType": "ExpressionStatement",
                  "src": "375:136:40"
                }
              ]
            },
            "functionSelector": "63d2ea6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMessageOnDeployment",
            "nameLocation": "326:23:40",
            "parameters": {
              "id": 48606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:2:40"
            },
            "returnParameters": {
              "id": 48607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "364:0:40"
            },
            "scope": 48650,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48649,
            "nodeType": "FunctionDefinition",
            "src": "527:250:40",
            "nodes": [],
            "body": {
              "id": 48648,
              "nodeType": "Block",
              "src": "563:214:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c6561726e2053636166666f6c642d455448203221203a29",
                        "id": 48630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "599:26:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02de0d935aa8bae86215156624c63bb7462adc4d22b2c49574e4ad33da36ce31",
                          "typeString": "literal_string \"Learn Scaffold-ETH 2! :)\""
                        },
                        "value": "Learn Scaffold-ETH 2! :)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_02de0d935aa8bae86215156624c63bb7462adc4d22b2c49574e4ad33da36ce31",
                          "typeString": "literal_string \"Learn Scaffold-ETH 2! :)\""
                        }
                      ],
                      "expression": {
                        "id": 48627,
                        "name": "yourContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48590,
                        "src": "574:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_YourContract_$2088",
                          "typeString": "contract YourContract"
                        }
                      },
                      "id": 48629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "587:11:40",
                      "memberName": "setGreeting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2057,
                      "src": "574:24:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) payable external"
                      }
                    },
                    "id": 48631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "574:52:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48632,
                  "nodeType": "ExpressionStatement",
                  "src": "574:52:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 48645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 48637,
                                      "name": "yourContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48590,
                                      "src": "675:12:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_YourContract_$2088",
                                        "typeString": "contract YourContract"
                                      }
                                    },
                                    "id": 48638,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "688:8:40",
                                    "memberName": "greeting",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1955,
                                    "src": "675:21:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 48639,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "675:23:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 48636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "669:5:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 48635,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "669:5:40",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 48640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "669:30:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 48634,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "659:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 48641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "659:41:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "4c6561726e2053636166666f6c642d455448203221203a29",
                              "id": 48643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "731:26:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_02de0d935aa8bae86215156624c63bb7462adc4d22b2c49574e4ad33da36ce31",
                                "typeString": "literal_string \"Learn Scaffold-ETH 2! :)\""
                              },
                              "value": "Learn Scaffold-ETH 2! :)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_02de0d935aa8bae86215156624c63bb7462adc4d22b2c49574e4ad33da36ce31",
                                "typeString": "literal_string \"Learn Scaffold-ETH 2! :)\""
                              }
                            ],
                            "id": 48642,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "721:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 48644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "721:37:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "659:99:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "637:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 48646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:132:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48647,
                  "nodeType": "ExpressionStatement",
                  "src": "637:132:40"
                }
              ]
            },
            "functionSelector": "831eca41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetNewMessage",
            "nameLocation": "536:17:40",
            "parameters": {
              "id": 48625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:2:40"
            },
            "returnParameters": {
              "id": 48626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:40"
            },
            "scope": 48650,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48586,
              "name": "Test",
              "nameLocations": [
                "170:4:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15284,
              "src": "170:4:40"
            },
            "id": 48587,
            "nodeType": "InheritanceSpecifier",
            "src": "170:4:40"
          }
        ],
        "canonicalName": "YourContractTest",
        "contractDependencies": [
          2088
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48650,
          15284,
          5704,
          5701,
          15233,
          10971,
          10681,
          9917,
          7863,
          7170,
          5638
        ],
        "name": "YourContractTest",
        "nameLocation": "150:16:40",
        "scope": 48651,
        "usedErrors": [],
        "usedEvents": [
          3352,
          3356,
          3360,
          3364,
          3368,
          3372,
          3376,
          3380,
          3386,
          3392,
          3400,
          3408,
          3414,
          3420,
          3426,
          3432,
          5765,
          5770,
          5775,
          5782,
          5789,
          5796
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 40
}