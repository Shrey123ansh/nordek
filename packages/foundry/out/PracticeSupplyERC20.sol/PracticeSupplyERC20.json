{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600e81526020016d050726163746963652045524332360941b815250604051806040016040528060048152602001635045524360e01b81525081600390816200006791906200020a565b5060046200007682826200020a565b505050620000953369d3c21bcecceda10000006200009b60201b60201c565b620002fe565b6001600160a01b038216620000f65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010a9190620002d6565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019157607f821691505b602082108103620001b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016157600081815260208120601f850160051c81016020861015620001e15750805b601f850160051c820191505b818110156200020257828155600101620001ed565b505050505050565b81516001600160401b0381111562000226576200022662000166565b6200023e816200023784546200017c565b84620001b8565b602080601f8311600181146200027657600084156200025d5750858301515b600019600386901b1c1916600185901b17855562000202565b600085815260208120601f198616915b82811015620002a75788860151825594840194600190910190840162000286565b5085821015620002c65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620002f857634e487b7160e01b600052601160045260246000fd5b92915050565b610b99806200030e6000396000f3fe6080604052600436106100b45760003560e01c8063395093511161006e578063a457c2d71161004b578063a457c2d7146101eb578063a9059cbb1461020b578063dd62ed3e1461022b57005b8063395093511461017357806370a082311461019357806395d89b41146101d657005b806318160ddd1161009c57806318160ddd1461011857806323b872dd14610137578063313ce5671461015757005b806306fdde03146100bd578063095ea7b3146100e857005b366100bb57005b005b3480156100c957600080fd5b506100d261027e565b6040516100df9190610986565b60405180910390f35b3480156100f457600080fd5b50610108610103366004610a1b565b610310565b60405190151581526020016100df565b34801561012457600080fd5b506002545b6040519081526020016100df565b34801561014357600080fd5b50610108610152366004610a45565b61032a565b34801561016357600080fd5b50604051601281526020016100df565b34801561017f57600080fd5b5061010861018e366004610a1b565b61034e565b34801561019f57600080fd5b506101296101ae366004610a81565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b3480156101e257600080fd5b506100d261039a565b3480156101f757600080fd5b50610108610206366004610a1b565b6103a9565b34801561021757600080fd5b50610108610226366004610a1b565b61047f565b34801561023757600080fd5b50610129610246366004610aa3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461028d90610ad6565b80601f01602080910402602001604051908101604052809291908181526020018280546102b990610ad6565b80156103065780601f106102db57610100808354040283529160200191610306565b820191906000526020600020905b8154815290600101906020018083116102e957829003601f168201915b5050505050905090565b60003361031e81858561048d565b60019150505b92915050565b600033610338858285610640565b610343858585610717565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061031e9082908690610395908790610b29565b61048d565b60606004805461028d90610ad6565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610343828686840361048d565b60003361031e818585610717565b73ffffffffffffffffffffffffffffffffffffffff831661052f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff82166105d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107115781811015610704576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610469565b610711848484840361048d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166107ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff821661085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610711565b600060208083528351808285015260005b818110156109b357858101830151858201604001528201610997565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a1657600080fd5b919050565b60008060408385031215610a2e57600080fd5b610a37836109f2565b946020939093013593505050565b600080600060608486031215610a5a57600080fd5b610a63846109f2565b9250610a71602085016109f2565b9150604084013590509250925092565b600060208284031215610a9357600080fd5b610a9c826109f2565b9392505050565b60008060408385031215610ab657600080fd5b610abf836109f2565b9150610acd602084016109f2565b90509250929050565b600181811c90821680610aea57607f821691505b602082108103610b23577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115610324577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207e8d04192b74c51d1bd9a392a962e148b75d89a57ae635d5e562bd7766c1649664736f6c63430008150033",
    "sourceMap": "109:232:3:-:0;;;154:109;;;;;;;;;;2033:116:63;;;;;;;;;;;;;-1:-1:-1;;;2033:116:63;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:116:63;;;2108:5;2100;:13;;;;;;:::i;:::-;-1:-1:-1;2124:7:63;:17;2134:7;2124;:17;:::i;:::-;;2033:116;;211:44:3::1;217:10;229:25;211:5;;;:44;;:::i;:::-;109:232:::0;;8770:548:63;-1:-1:-1;;;;;8854:21:63;;8846:65;;;;-1:-1:-1;;;8846:65:63;;2937:2:73;8846:65:63;;;2919:21:73;2976:2;2956:18;;;2949:30;3015:33;2995:18;;;2988:61;3066:18;;8846:65:63;;;;;;;;9002:6;8986:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9157:18:63;;:9;:18;;;;;;;;;;;:28;;;;;;9212:37;3468:25:73;;;9212:37:63;;3441:18:73;9212:37:63;;;;;;;8770:548;;:::o;12420:91::-;;;;:::o;14:127:73:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:73;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:73;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:73;;;2580:26;2531:89;-1:-1:-1;;1335:1:73;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:73;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:73;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:73;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:73:o;3095:222::-;3160:9;;;3181:10;;;3178:133;;;3233:10;3228:3;3224:20;3221:1;3214:31;3268:4;3265:1;3258:15;3296:4;3293:1;3286:15;3178:133;3095:222;;;;:::o;3322:177::-;109:232:3;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100b45760003560e01c8063395093511161006e578063a457c2d71161004b578063a457c2d7146101eb578063a9059cbb1461020b578063dd62ed3e1461022b57005b8063395093511461017357806370a082311461019357806395d89b41146101d657005b806318160ddd1161009c57806318160ddd1461011857806323b872dd14610137578063313ce5671461015757005b806306fdde03146100bd578063095ea7b3146100e857005b366100bb57005b005b3480156100c957600080fd5b506100d261027e565b6040516100df9190610986565b60405180910390f35b3480156100f457600080fd5b50610108610103366004610a1b565b610310565b60405190151581526020016100df565b34801561012457600080fd5b506002545b6040519081526020016100df565b34801561014357600080fd5b50610108610152366004610a45565b61032a565b34801561016357600080fd5b50604051601281526020016100df565b34801561017f57600080fd5b5061010861018e366004610a1b565b61034e565b34801561019f57600080fd5b506101296101ae366004610a81565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b3480156101e257600080fd5b506100d261039a565b3480156101f757600080fd5b50610108610206366004610a1b565b6103a9565b34801561021757600080fd5b50610108610226366004610a1b565b61047f565b34801561023757600080fd5b50610129610246366004610aa3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461028d90610ad6565b80601f01602080910402602001604051908101604052809291908181526020018280546102b990610ad6565b80156103065780601f106102db57610100808354040283529160200191610306565b820191906000526020600020905b8154815290600101906020018083116102e957829003601f168201915b5050505050905090565b60003361031e81858561048d565b60019150505b92915050565b600033610338858285610640565b610343858585610717565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061031e9082908690610395908790610b29565b61048d565b60606004805461028d90610ad6565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610343828686840361048d565b60003361031e818585610717565b73ffffffffffffffffffffffffffffffffffffffff831661052f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff82166105d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107115781811015610704576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610469565b610711848484840361048d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166107ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff821661085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610469565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610711565b600060208083528351808285015260005b818110156109b357858101830151858201604001528201610997565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a1657600080fd5b919050565b60008060408385031215610a2e57600080fd5b610a37836109f2565b946020939093013593505050565b600080600060608486031215610a5a57600080fd5b610a63846109f2565b9250610a71602085016109f2565b9150604084013590509250925092565b600060208284031215610a9357600080fd5b610a9c826109f2565b9392505050565b60008060408385031215610ab657600080fd5b610abf836109f2565b9150610acd602084016109f2565b90509250929050565b600181811c90821680610aea57607f821691505b602082108103610b23577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115610324577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207e8d04192b74c51d1bd9a392a962e148b75d89a57ae635d5e562bd7766c1649664736f6c63430008150033",
    "sourceMap": "109:232:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:100:63;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4579:201;;;;;;;;;;-1:-1:-1;4579:201:63;;;;;:::i;:::-;;:::i;:::-;;;1251:14:73;;1244:22;1226:41;;1214:2;1199:18;4579:201:63;1086:187:73;3348:108:63;;;;;;;;;;-1:-1:-1;3436:12:63;;3348:108;;;1424:25:73;;;1412:2;1397:18;3348:108:63;1278:177:73;5360:261:63;;;;;;;;;;-1:-1:-1;5360:261:63;;;;;:::i;:::-;;:::i;3190:93::-;;;;;;;;;;-1:-1:-1;3190:93:63;;3273:2;1935:36:73;;1923:2;1908:18;3190:93:63;1793:184:73;6030:238:63;;;;;;;;;;-1:-1:-1;6030:238:63;;;;;:::i;:::-;;:::i;3519:127::-;;;;;;;;;;-1:-1:-1;3519:127:63;;;;;:::i;:::-;3620:18;;3593:7;3620:18;;;;;;;;;;;;3519:127;2438:104;;;;;;;;;;;;;:::i;6771:436::-;;;;;;;;;;-1:-1:-1;6771:436:63;;;;;:::i;:::-;;:::i;3852:193::-;;;;;;;;;;-1:-1:-1;3852:193:63;;;;;:::i;:::-;;:::i;4108:151::-;;;;;;;;;;-1:-1:-1;4108:151:63;;;;;:::i;:::-;4224:18;;;;4197:7;4224:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4108:151;2219:100;2273:13;2306:5;2299:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:100;:::o;4579:201::-;4662:4;736:10:67;4718:32:63;736:10:67;4734:7:63;4743:6;4718:8;:32::i;:::-;4768:4;4761:11;;;4579:201;;;;;:::o;5360:261::-;5457:4;736:10:67;5515:38:63;5531:4;736:10:67;5546:6:63;5515:15;:38::i;:::-;5564:27;5574:4;5580:2;5584:6;5564:9;:27::i;:::-;-1:-1:-1;5609:4:63;;5360:261;-1:-1:-1;;;;5360:261:63:o;6030:238::-;736:10:67;6118:4:63;4224:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6118:4;;736:10:67;6174:64:63;;736:10:67;;4224:27:63;;6199:38;;6227:10;;6199:38;:::i;:::-;6174:8;:64::i;2438:104::-;2494:13;2527:7;2520:14;;;;;:::i;6771:436::-;736:10:67;6864:4:63;4224:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6864:4;;736:10:67;7011:15:63;6991:16;:35;;6983:85;;;;;;;3366:2:73;6983:85:63;;;3348:21:73;3405:2;3385:18;;;3378:30;3444:34;3424:18;;;3417:62;3515:7;3495:18;;;3488:35;3540:19;;6983:85:63;;;;;;;;;7104:60;7113:5;7120:7;7148:15;7129:16;:34;7104:8;:60::i;3852:193::-;3931:4;736:10:67;3987:28:63;736:10:67;4004:2:63;4008:6;3987:9;:28::i;10764:346::-;10866:19;;;10858:68;;;;;;;3772:2:73;10858:68:63;;;3754:21:73;3811:2;3791:18;;;3784:30;3850:34;3830:18;;;3823:62;3921:6;3901:18;;;3894:34;3945:19;;10858:68:63;3570:400:73;10858:68:63;10945:21;;;10937:68;;;;;;;4177:2:73;10937:68:63;;;4159:21:73;4216:2;4196:18;;;4189:30;4255:34;4235:18;;;4228:62;4326:4;4306:18;;;4299:32;4348:19;;10937:68:63;3975:398:73;10937:68:63;11018:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11070:32;;1424:25:73;;;11070:32:63;;1397:18:73;11070:32:63;;;;;;;10764:346;;;:::o;11401:419::-;4224:18;;;;11502:24;4224:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11589:17;11569:37;;11565:248;;11651:6;11631:16;:26;;11623:68;;;;;;;4580:2:73;11623:68:63;;;4562:21:73;4619:2;4599:18;;;4592:30;4658:31;4638:18;;;4631:59;4707:18;;11623:68:63;4378:353:73;11623:68:63;11735:51;11744:5;11751:7;11779:6;11760:16;:25;11735:8;:51::i;:::-;11491:329;11401:419;;;:::o;7677:806::-;7774:18;;;7766:68;;;;;;;4938:2:73;7766:68:63;;;4920:21:73;4977:2;4957:18;;;4950:30;5016:34;4996:18;;;4989:62;5087:7;5067:18;;;5060:35;5112:19;;7766:68:63;4736:401:73;7766:68:63;7853:16;;;7845:64;;;;;;;5344:2:73;7845:64:63;;;5326:21:73;5383:2;5363:18;;;5356:30;5422:34;5402:18;;;5395:62;5493:5;5473:18;;;5466:33;5516:19;;7845:64:63;5142:399:73;7845:64:63;7995:15;;;7973:19;7995:15;;;;;;;;;;;8029:21;;;;8021:72;;;;;;;5748:2:73;8021:72:63;;;5730:21:73;5787:2;5767:18;;;5760:30;5826:34;5806:18;;;5799:62;5897:8;5877:18;;;5870:36;5923:19;;8021:72:63;5546:402:73;8021:72:63;8129:15;;;;:9;:15;;;;;;;;;;;8147:20;;;8129:38;;8347:13;;;;;;;;;;:23;;;;;;8399:26;;1424:25:73;;;8347:13:63;;8399:26;;1397:18:73;8399:26:63;;;;;;;8438:37;12420:91;14:607:73;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:73:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;1982:186::-;2041:6;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;1982:186;-1:-1:-1;;;1982:186:73:o;2173:260::-;2241:6;2249;2302:2;2290:9;2281:7;2277:23;2273:32;2270:52;;;2318:1;2315;2308:12;2270:52;2341:29;2360:9;2341:29;:::i;:::-;2331:39;;2389:38;2423:2;2412:9;2408:18;2389:38;:::i;:::-;2379:48;;2173:260;;;;;:::o;2438:437::-;2517:1;2513:12;;;;2560;;;2581:61;;2635:4;2627:6;2623:17;2613:27;;2581:61;2688:2;2680:6;2677:14;2657:18;2654:38;2651:218;;2725:77;2722:1;2715:88;2826:4;2823:1;2816:15;2854:4;2851:1;2844:15;2651:218;;2438:437;;;:::o;2880:279::-;2945:9;;;2966:10;;;2963:190;;;3009:77;3006:1;2999:88;3110:4;3107:1;3100:15;3138:4;3135:1;3128:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PracticeSupplyERC20.sol\":\"PracticeSupplyERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/PracticeSupplyERC20.sol\":{\"keccak256\":\"0x26e24e5d7c521072c0b1c115a194b54d0eb306af6da8f47245f66ad9b28ee299\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0dae662f0baeb975a19ec6796959e335eede7e1dadbb64ef5ef0a127c22f9a2\",\"dweb:/ipfs/QmbhTNT1f5QbBXXhjXf8jWjAnfkfXiT79tifH51yzdisZM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa3ce7a0af2f67fd8de6bdf4fb32434fd84396596c5fb55a8b9213cd08b71b2d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa06b0c234b5597955f9a5b867a9bd9c498d4d1c89925a0c1dea2facd5a4ae1b\",\"dweb:/ipfs/QmP3y9CMRRY1ipQRcF1HSRos56jtLA1rnVakks5MTi9WLe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/PracticeSupplyERC20.sol": "PracticeSupplyERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/PracticeSupplyERC20.sol": {
        "keccak256": "0x26e24e5d7c521072c0b1c115a194b54d0eb306af6da8f47245f66ad9b28ee299",
        "urls": [
          "bzz-raw://b0dae662f0baeb975a19ec6796959e335eede7e1dadbb64ef5ef0a127c22f9a2",
          "dweb:/ipfs/QmbhTNT1f5QbBXXhjXf8jWjAnfkfXiT79tifH51yzdisZM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa3ce7a0af2f67fd8de6bdf4fb32434fd84396596c5fb55a8b9213cd08b71b2d7",
        "urls": [
          "bzz-raw://fa06b0c234b5597955f9a5b867a9bd9c498d4d1c89925a0c1dea2facd5a4ae1b",
          "dweb:/ipfs/QmP3y9CMRRY1ipQRcF1HSRos56jtLA1rnVakks5MTi9WLe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9",
        "urls": [
          "bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d",
          "dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/PracticeSupplyERC20.sol",
    "id": 362,
    "exportedSymbols": {
      "Context": [
        60824
      ],
      "ERC20": [
        60369
      ],
      "IERC20": [
        60447
      ],
      "IERC20Metadata": [
        60472
      ],
      "PracticeSupplyERC20": [
        361
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:310:3",
    "nodes": [
      {
        "id": 335,
        "nodeType": "PragmaDirective",
        "src": "33:24:3",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 336,
        "nodeType": "ImportDirective",
        "src": "61:44:3",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 362,
        "sourceUnit": 60370,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 361,
        "nodeType": "ContractDefinition",
        "src": "109:232:3",
        "nodes": [
          {
            "id": 352,
            "nodeType": "FunctionDefinition",
            "src": "154:109:3",
            "nodes": [],
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "200:63:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 346,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "217:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "221:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "217:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030303030303030",
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "229:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 345,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60186,
                      "src": "211:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "211:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "211:44:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5072616374696365204552433230",
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "174:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1bb1954b5ba5e14418552e03530e385e870b679f1eb7a29761cf39cd6d5f522d",
                      "typeString": "literal_string \"Practice ERC20\""
                    },
                    "value": "Practice ERC20"
                  },
                  {
                    "hexValue": "50455243",
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "192:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cc49ae3a9a3b775aef4745ee386efb528758e1a5fd2d11e2ec8ad0e5ce36c09f",
                      "typeString": "literal_string \"PERC\""
                    },
                    "value": "PERC"
                  }
                ],
                "id": 343,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 340,
                  "name": "ERC20",
                  "nameLocations": [
                    "168:5:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60369,
                  "src": "168:5:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "168:31:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "165:2:3"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:0:3"
            },
            "scope": 361,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 356,
            "nodeType": "FunctionDefinition",
            "src": "271:30:3",
            "nodes": [],
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "299:2:3",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:3"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:0:3"
            },
            "scope": 361,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 360,
            "nodeType": "FunctionDefinition",
            "src": "309:29:3",
            "nodes": [],
            "body": {
              "id": 359,
              "nodeType": "Block",
              "src": "336:2:3",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:2:3"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:3"
            },
            "scope": 361,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 337,
              "name": "ERC20",
              "nameLocations": [
                "141:5:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60369,
              "src": "141:5:3"
            },
            "id": 338,
            "nodeType": "InheritanceSpecifier",
            "src": "141:5:3"
          }
        ],
        "canonicalName": "PracticeSupplyERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          361,
          60369,
          60472,
          60447,
          60824
        ],
        "name": "PracticeSupplyERC20",
        "nameLocation": "118:19:3",
        "scope": 362,
        "usedErrors": [],
        "usedEvents": [
          60381,
          60390
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 3
}